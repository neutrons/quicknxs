# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer/ui_main_window.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1803, 756)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/General/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setDockNestingEnabled(False)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.mainSplitter = QtWidgets.QSplitter(self.centralwidget)
        self.mainSplitter.setOrientation(QtCore.Qt.Horizontal)
        self.mainSplitter.setChildrenCollapsible(False)
        self.mainSplitter.setObjectName("mainSplitter")
        self.leftEntries = QtWidgets.QFrame(self.mainSplitter)
        self.leftEntries.setMinimumSize(QtCore.QSize(350, 0))
        self.leftEntries.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.leftEntries.setFrameShadow(QtWidgets.QFrame.Raised)
        self.leftEntries.setObjectName("leftEntries")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.leftEntries)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setContentsMargins(4, 4, 4, 2)
        self.horizontalLayout_12.setSpacing(7)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_28 = QtWidgets.QLabel(self.leftEntries)
        self.label_28.setObjectName("label_28")
        self.horizontalLayout_12.addWidget(self.label_28)
        self.numberSearchEntry = QtWidgets.QLineEdit(self.leftEntries)
        self.numberSearchEntry.setObjectName("numberSearchEntry")
        self.horizontalLayout_12.addWidget(self.numberSearchEntry)
        self.verticalLayout_5.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setContentsMargins(4, -1, -1, 2)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.histogramActive = QtWidgets.QRadioButton(self.leftEntries)
        self.histogramActive.setEnabled(False)
        self.histogramActive.setChecked(False)
        self.histogramActive.setObjectName("histogramActive")
        self.horizontalLayout_11.addWidget(self.histogramActive)
        self.eventActive = QtWidgets.QRadioButton(self.leftEntries)
        self.eventActive.setChecked(True)
        self.eventActive.setObjectName("eventActive")
        self.horizontalLayout_11.addWidget(self.eventActive)
        self.oldFormatActive = QtWidgets.QRadioButton(self.leftEntries)
        self.oldFormatActive.setEnabled(False)
        self.oldFormatActive.setObjectName("oldFormatActive")
        self.horizontalLayout_11.addWidget(self.oldFormatActive)
        self.verticalLayout_5.addLayout(self.horizontalLayout_11)
        self.eventModeEntries = QtWidgets.QWidget(self.leftEntries)
        self.eventModeEntries.setObjectName("eventModeEntries")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.eventModeEntries)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setContentsMargins(4, -1, -1, -1)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_27 = QtWidgets.QLabel(self.eventModeEntries)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_27.sizePolicy().hasHeightForWidth())
        self.label_27.setSizePolicy(sizePolicy)
        self.label_27.setObjectName("label_27")
        self.horizontalLayout_10.addWidget(self.label_27)
        self.eventTofBins = QtWidgets.QSpinBox(self.eventModeEntries)
        self.eventTofBins.setMinimum(5)
        self.eventTofBins.setMaximum(10000)
        self.eventTofBins.setSingleStep(5)
        self.eventTofBins.setProperty("value", 200)
        self.eventTofBins.setObjectName("eventTofBins")
        self.horizontalLayout_10.addWidget(self.eventTofBins)
        self.eventBinMode = QtWidgets.QComboBox(self.eventModeEntries)
        self.eventBinMode.setObjectName("eventBinMode")
        self.eventBinMode.addItem("")
        self.horizontalLayout_10.addWidget(self.eventBinMode)
        self.verticalLayout.addLayout(self.horizontalLayout_10)
        self.event_filtering_layout = QtWidgets.QGridLayout()
        self.event_filtering_layout.setContentsMargins(4, -1, -1, -1)
        self.event_filtering_layout.setObjectName("event_filtering_layout")
        self.eventSplitItems = QtWidgets.QSpinBox(self.eventModeEntries)
        self.eventSplitItems.setMinimum(2)
        self.eventSplitItems.setSingleStep(1)
        self.eventSplitItems.setProperty("value", 10)
        self.eventSplitItems.setObjectName("eventSplitItems")
        self.event_filtering_layout.addWidget(self.eventSplitItems, 2, 1, 1, 1)
        self.label_38 = QtWidgets.QLabel(self.eventModeEntries)
        self.label_38.setObjectName("label_38")
        self.event_filtering_layout.addWidget(self.label_38, 2, 2, 1, 1)
        self.label_39 = QtWidgets.QLabel(self.eventModeEntries)
        self.label_39.setObjectName("label_39")
        self.event_filtering_layout.addWidget(self.label_39, 2, 0, 1, 1)
        self.eventSplit = QtWidgets.QCheckBox(self.eventModeEntries)
        self.eventSplit.setObjectName("eventSplit")
        self.event_filtering_layout.addWidget(self.eventSplit, 0, 0, 1, 3)
        self.eventTotalTimeLabel = QtWidgets.QLabel(self.eventModeEntries)
        self.eventTotalTimeLabel.setObjectName("eventTotalTimeLabel")
        self.event_filtering_layout.addWidget(self.eventTotalTimeLabel, 0, 3, 1, 1)
        self.eventSplitIndex = QtWidgets.QSpinBox(self.eventModeEntries)
        self.eventSplitIndex.setMinimum(1)
        self.eventSplitIndex.setObjectName("eventSplitIndex")
        self.event_filtering_layout.addWidget(self.eventSplitIndex, 2, 3, 1, 1)
        self.verticalLayout.addLayout(self.event_filtering_layout)
        self.verticalLayout_5.addWidget(self.eventModeEntries)
        self.file_list = QtWidgets.QListWidget(self.leftEntries)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.file_list.sizePolicy().hasHeightForWidth())
        self.file_list.setSizePolicy(sizePolicy)
        self.file_list.setObjectName("file_list")
        self.verticalLayout_5.addWidget(self.file_list)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.reload_file_button = QtWidgets.QPushButton(self.leftEntries)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reload_file_button.sizePolicy().hasHeightForWidth())
        self.reload_file_button.setSizePolicy(sizePolicy)
        self.reload_file_button.setObjectName("reload_file_button")
        self.horizontalLayout_15.addWidget(self.reload_file_button)
        self.refresh_list = QtWidgets.QPushButton(self.leftEntries)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.refresh_list.sizePolicy().hasHeightForWidth())
        self.refresh_list.setSizePolicy(sizePolicy)
        self.refresh_list.setObjectName("refresh_list")
        self.horizontalLayout_15.addWidget(self.refresh_list)
        self.match_direct_beam_button = QtWidgets.QPushButton(self.leftEntries)
        self.match_direct_beam_button.setObjectName("match_direct_beam_button")
        self.horizontalLayout_15.addWidget(self.match_direct_beam_button)
        self.verticalLayout_5.addLayout(self.horizontalLayout_15)
        self.toolBox = QtWidgets.QToolBox(self.leftEntries)
        self.toolBox.setMinimumSize(QtCore.QSize(0, 300))
        self.toolBox.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.toolBox.setLineWidth(0)
        self.toolBox.setObjectName("toolBox")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 361, 207))
        self.page.setObjectName("page")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.page)
        self.gridLayout_3.setContentsMargins(2, 2, 2, 2)
        self.gridLayout_3.setVerticalSpacing(1)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.refYPos = QtWidgets.QDoubleSpinBox(self.page)
        self.refYPos.setDecimals(1)
        self.refYPos.setMaximum(400.0)
        self.refYPos.setProperty("value", 128.0)
        self.refYPos.setObjectName("refYPos")
        self.gridLayout_3.addWidget(self.refYPos, 1, 2, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.page)
        self.label_3.setStyleSheet("text-align: right;")
        self.label_3.setObjectName("label_3")
        self.gridLayout_3.addWidget(self.label_3, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.page)
        self.label_2.setMinimumSize(QtCore.QSize(0, 18))
        self.label_2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 0, 3, 1, 1)
        self.rangeEnd = QtWidgets.QSpinBox(self.page)
        self.rangeEnd.setMaximum(200)
        self.rangeEnd.setProperty("value", 0)
        self.rangeEnd.setObjectName("rangeEnd")
        self.gridLayout_3.addWidget(self.rangeEnd, 5, 3, 1, 1)
        self.refXPos = QtWidgets.QDoubleSpinBox(self.page)
        self.refXPos.setDecimals(1)
        self.refXPos.setMaximum(400.0)
        self.refXPos.setProperty("value", 128.0)
        self.refXPos.setObjectName("refXPos")
        self.gridLayout_3.addWidget(self.refXPos, 2, 2, 1, 1)
        self.bgWidth = QtWidgets.QDoubleSpinBox(self.page)
        self.bgWidth.setDecimals(1)
        self.bgWidth.setMaximum(400.0)
        self.bgWidth.setProperty("value", 4.0)
        self.bgWidth.setObjectName("bgWidth")
        self.gridLayout_3.addWidget(self.bgWidth, 3, 3, 1, 1)
        self.bgCenter = QtWidgets.QDoubleSpinBox(self.page)
        self.bgCenter.setDecimals(1)
        self.bgCenter.setMaximum(400.0)
        self.bgCenter.setProperty("value", 2.0)
        self.bgCenter.setObjectName("bgCenter")
        self.gridLayout_3.addWidget(self.bgCenter, 3, 2, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.page)
        self.label_4.setStyleSheet("text-align: right;")
        self.label_4.setObjectName("label_4")
        self.gridLayout_3.addWidget(self.label_4, 2, 1, 1, 1)
        self.refScale = QtWidgets.QDoubleSpinBox(self.page)
        self.refScale.setDecimals(3)
        self.refScale.setMinimum(-20.0)
        self.refScale.setMaximum(20.0)
        self.refScale.setSingleStep(0.02)
        self.refScale.setProperty("value", 0.0)
        self.refScale.setObjectName("refScale")
        self.gridLayout_3.addWidget(self.refScale, 4, 3, 1, 1)
        self.rangeStart = QtWidgets.QSpinBox(self.page)
        self.rangeStart.setMaximum(200)
        self.rangeStart.setObjectName("rangeStart")
        self.gridLayout_3.addWidget(self.rangeStart, 5, 2, 1, 1)
        self.refXWidth = QtWidgets.QDoubleSpinBox(self.page)
        self.refXWidth.setDecimals(1)
        self.refXWidth.setMinimum(1.0)
        self.refXWidth.setMaximum(304.0)
        self.refXWidth.setProperty("value", 9.0)
        self.refXWidth.setObjectName("refXWidth")
        self.gridLayout_3.addWidget(self.refXWidth, 2, 3, 1, 1)
        self.refYWidth = QtWidgets.QDoubleSpinBox(self.page)
        self.refYWidth.setDecimals(1)
        self.refYWidth.setMinimum(1.0)
        self.refYWidth.setMaximum(400.0)
        self.refYWidth.setProperty("value", 6.0)
        self.refYWidth.setObjectName("refYWidth")
        self.gridLayout_3.addWidget(self.refYWidth, 1, 3, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.page)
        self.label_20.setStyleSheet("text-align: right;")
        self.label_20.setObjectName("label_20")
        self.gridLayout_3.addWidget(self.label_20, 5, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.page)
        self.label.setMinimumSize(QtCore.QSize(0, 18))
        self.label.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 0, 2, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.page)
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 4, 2, 1, 1)
        self.bgActive = QtWidgets.QCheckBox(self.page)
        self.bgActive.setStyleSheet("text-align: right;")
        self.bgActive.setChecked(True)
        self.bgActive.setObjectName("bgActive")
        self.gridLayout_3.addWidget(self.bgActive, 3, 1, 1, 1)
        self.final_rebin_checkbox = QtWidgets.QCheckBox(self.page)
        self.final_rebin_checkbox.setChecked(True)
        self.final_rebin_checkbox.setObjectName("final_rebin_checkbox")
        self.gridLayout_3.addWidget(self.final_rebin_checkbox, 7, 1, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.page)
        self.label_45.setObjectName("label_45")
        self.gridLayout_3.addWidget(self.label_45, 7, 2, 1, 1)
        self.q_rebin_spinbox = QtWidgets.QDoubleSpinBox(self.page)
        self.q_rebin_spinbox.setDecimals(3)
        self.q_rebin_spinbox.setMinimum(-0.1)
        self.q_rebin_spinbox.setMaximum(0.1)
        self.q_rebin_spinbox.setSingleStep(0.001)
        self.q_rebin_spinbox.setProperty("value", -0.01)
        self.q_rebin_spinbox.setObjectName("q_rebin_spinbox")
        self.gridLayout_3.addWidget(self.q_rebin_spinbox, 7, 3, 1, 1)
        self.toolBox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 361, 207))
        self.page_2.setObjectName("page_2")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.page_2)
        self.gridLayout_15.setContentsMargins(2, 2, 2, 2)
        self.gridLayout_15.setVerticalSpacing(0)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.directPixelOverwrite = QtWidgets.QDoubleSpinBox(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.directPixelOverwrite.sizePolicy().hasHeightForWidth())
        self.directPixelOverwrite.setSizePolicy(sizePolicy)
        self.directPixelOverwrite.setDecimals(2)
        self.directPixelOverwrite.setMinimum(-1.0)
        self.directPixelOverwrite.setMaximum(304.0)
        self.directPixelOverwrite.setSingleStep(1.0)
        self.directPixelOverwrite.setProperty("value", -1.0)
        self.directPixelOverwrite.setObjectName("directPixelOverwrite")
        self.gridLayout_15.addWidget(self.directPixelOverwrite, 0, 2, 1, 2)
        self.label_30 = QtWidgets.QLabel(self.page_2)
        self.label_30.setMinimumSize(QtCore.QSize(82, 0))
        self.label_30.setObjectName("label_30")
        self.gridLayout_15.addWidget(self.label_30, 3, 1, 1, 1)
        self.trustDANGLE = QtWidgets.QRadioButton(self.page_2)
        self.trustDANGLE.setMinimumSize(QtCore.QSize(76, 0))
        self.trustDANGLE.setChecked(False)
        self.trustDANGLE.setObjectName("trustDANGLE")
        self.gridLayout_15.addWidget(self.trustDANGLE, 3, 2, 1, 1)
        self.trustSANGLE = QtWidgets.QRadioButton(self.page_2)
        self.trustSANGLE.setMinimumSize(QtCore.QSize(76, 0))
        self.trustSANGLE.setChecked(True)
        self.trustSANGLE.setObjectName("trustSANGLE")
        self.gridLayout_15.addWidget(self.trustSANGLE, 3, 3, 1, 1)
        self.fanReflectivity = QtWidgets.QCheckBox(self.page_2)
        self.fanReflectivity.setObjectName("fanReflectivity")
        self.gridLayout_15.addWidget(self.fanReflectivity, 8, 1, 1, 2)
        self.set_dangle0_checkbox = QtWidgets.QCheckBox(self.page_2)
        self.set_dangle0_checkbox.setObjectName("set_dangle0_checkbox")
        self.gridLayout_15.addWidget(self.set_dangle0_checkbox, 2, 1, 1, 1)
        self.set_dirpix_checkbox = QtWidgets.QCheckBox(self.page_2)
        self.set_dirpix_checkbox.setObjectName("set_dirpix_checkbox")
        self.gridLayout_15.addWidget(self.set_dirpix_checkbox, 0, 1, 1, 1)
        self.dangle0Overwrite = QtWidgets.QDoubleSpinBox(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dangle0Overwrite.sizePolicy().hasHeightForWidth())
        self.dangle0Overwrite.setSizePolicy(sizePolicy)
        self.dangle0Overwrite.setDecimals(4)
        self.dangle0Overwrite.setMinimum(-1.0)
        self.dangle0Overwrite.setMaximum(360.0)
        self.dangle0Overwrite.setObjectName("dangle0Overwrite")
        self.gridLayout_15.addWidget(self.dangle0Overwrite, 2, 2, 1, 2)
        self.normalize_to_unity_checkbox = QtWidgets.QCheckBox(self.page_2)
        self.normalize_to_unity_checkbox.setChecked(True)
        self.normalize_to_unity_checkbox.setObjectName("normalize_to_unity_checkbox")
        self.gridLayout_15.addWidget(self.normalize_to_unity_checkbox, 5, 1, 1, 2)
        self.label_29 = QtWidgets.QLabel(self.page_2)
        self.label_29.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_29.setObjectName("label_29")
        self.gridLayout_15.addWidget(self.label_29, 7, 1, 1, 1)
        self.normalization_q_cutoff_spinbox = QtWidgets.QDoubleSpinBox(self.page_2)
        self.normalization_q_cutoff_spinbox.setDecimals(3)
        self.normalization_q_cutoff_spinbox.setSingleStep(0.001)
        self.normalization_q_cutoff_spinbox.setProperty("value", 0.01)
        self.normalization_q_cutoff_spinbox.setObjectName("normalization_q_cutoff_spinbox")
        self.gridLayout_15.addWidget(self.normalization_q_cutoff_spinbox, 7, 2, 1, 1)
        self.label_31 = QtWidgets.QLabel(self.page_2)
        self.label_31.setMinimumSize(QtCore.QSize(130, 0))
        self.label_31.setObjectName("label_31")
        self.gridLayout_15.addWidget(self.label_31, 9, 1, 1, 1)
        self.sample_size_spinbox = QtWidgets.QDoubleSpinBox(self.page_2)
        self.sample_size_spinbox.setDecimals(1)
        self.sample_size_spinbox.setMaximum(10000.0)
        self.sample_size_spinbox.setProperty("value", 10.0)
        self.sample_size_spinbox.setObjectName("sample_size_spinbox")
        self.gridLayout_15.addWidget(self.sample_size_spinbox, 9, 2, 1, 1)
        self.label_53 = QtWidgets.QLabel(self.page_2)
        self.label_53.setObjectName("label_53")
        self.gridLayout_15.addWidget(self.label_53, 10, 1, 1, 1)
        self.bandwidth_spinbox = QtWidgets.QDoubleSpinBox(self.page_2)
        self.bandwidth_spinbox.setDecimals(1)
        self.bandwidth_spinbox.setSingleStep(0.1)
        self.bandwidth_spinbox.setProperty("value", 3.2)
        self.bandwidth_spinbox.setObjectName("bandwidth_spinbox")
        self.gridLayout_15.addWidget(self.bandwidth_spinbox, 10, 2, 1, 1)
        self.trustSANGLE.raise_()
        self.trustDANGLE.raise_()
        self.label_30.raise_()
        self.directPixelOverwrite.raise_()
        self.fanReflectivity.raise_()
        self.set_dirpix_checkbox.raise_()
        self.set_dangle0_checkbox.raise_()
        self.dangle0Overwrite.raise_()
        self.normalize_to_unity_checkbox.raise_()
        self.label_29.raise_()
        self.normalization_q_cutoff_spinbox.raise_()
        self.label_31.raise_()
        self.sample_size_spinbox.raise_()
        self.label_53.raise_()
        self.bandwidth_spinbox.raise_()
        self.toolBox.addItem(self.page_2, "")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setGeometry(QtCore.QRect(0, 0, 361, 207))
        self.page_3.setObjectName("page_3")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.page_3)
        self.gridLayout_17.setContentsMargins(2, 2, 2, 2)
        self.gridLayout_17.setVerticalSpacing(0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.label_26 = QtWidgets.QLabel(self.page_3)
        self.label_26.setObjectName("label_26")
        self.gridLayout_17.addWidget(self.label_26, 10, 0, 1, 1)
        self.fit_within_roi_checkbox = QtWidgets.QCheckBox(self.page_3)
        self.fit_within_roi_checkbox.setStatusTip("")
        self.fit_within_roi_checkbox.setChecked(True)
        self.fit_within_roi_checkbox.setObjectName("fit_within_roi_checkbox")
        self.gridLayout_17.addWidget(self.fit_within_roi_checkbox, 2, 0, 1, 2)
        self.roi_used_label = QtWidgets.QLabel(self.page_3)
        self.roi_used_label.setObjectName("roi_used_label")
        self.gridLayout_17.addWidget(self.roi_used_label, 5, 1, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.page_3)
        self.label_25.setObjectName("label_25")
        self.gridLayout_17.addWidget(self.label_25, 6, 0, 1, 1)
        self.roi_peak_label = QtWidgets.QLabel(self.page_3)
        self.roi_peak_label.setObjectName("roi_peak_label")
        self.gridLayout_17.addWidget(self.roi_peak_label, 6, 1, 1, 1)
        self.roi_bck_label = QtWidgets.QLabel(self.page_3)
        self.roi_bck_label.setObjectName("roi_bck_label")
        self.gridLayout_17.addWidget(self.roi_bck_label, 10, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.page_3)
        self.label_7.setObjectName("label_7")
        self.gridLayout_17.addWidget(self.label_7, 5, 0, 1, 1)
        self.use_side_bck_checkbox = QtWidgets.QCheckBox(self.page_3)
        self.use_side_bck_checkbox.setObjectName("use_side_bck_checkbox")
        self.gridLayout_17.addWidget(self.use_side_bck_checkbox, 3, 0, 1, 1)
        self.use_roi_checkbox = QtWidgets.QCheckBox(self.page_3)
        self.use_roi_checkbox.setChecked(True)
        self.use_roi_checkbox.setObjectName("use_roi_checkbox")
        self.gridLayout_17.addWidget(self.use_roi_checkbox, 0, 0, 1, 1)
        self.use_bck_roi_checkbox = QtWidgets.QCheckBox(self.page_3)
        self.use_bck_roi_checkbox.setChecked(True)
        self.use_bck_roi_checkbox.setObjectName("use_bck_roi_checkbox")
        self.gridLayout_17.addWidget(self.use_bck_roi_checkbox, 0, 1, 1, 1)
        self.side_bck_width = QtWidgets.QSpinBox(self.page_3)
        self.side_bck_width.setProperty("value", 5)
        self.side_bck_width.setObjectName("side_bck_width")
        self.gridLayout_17.addWidget(self.side_bck_width, 3, 1, 1, 1)
        self.toolBox.addItem(self.page_3, "")
        self.verticalLayout_5.addWidget(self.toolBox)
        self.line = QtWidgets.QFrame(self.leftEntries)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_5.addWidget(self.line)
        self.groupBox_2 = QtWidgets.QGroupBox(self.leftEntries)
        self.groupBox_2.setFlat(True)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setSpacing(1)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.xLamda = QtWidgets.QCheckBox(self.groupBox_2)
        self.xLamda.setObjectName("xLamda")
        self.gridLayout_16.addWidget(self.xLamda, 4, 1, 1, 1)
        self.tthPhi = QtWidgets.QCheckBox(self.groupBox_2)
        self.tthPhi.setObjectName("tthPhi")
        self.gridLayout_16.addWidget(self.tthPhi, 5, 1, 1, 1)
        self.show_colorbars = QtWidgets.QCheckBox(self.groupBox_2)
        self.show_colorbars.setObjectName("show_colorbars")
        self.gridLayout_16.addWidget(self.show_colorbars, 2, 0, 1, 1)
        self.logarithmic_colorscale = QtWidgets.QCheckBox(self.groupBox_2)
        self.logarithmic_colorscale.setChecked(True)
        self.logarithmic_colorscale.setObjectName("logarithmic_colorscale")
        self.gridLayout_16.addWidget(self.logarithmic_colorscale, 3, 0, 1, 1)
        self.logarithmic_y = QtWidgets.QCheckBox(self.groupBox_2)
        self.logarithmic_y.setChecked(True)
        self.logarithmic_y.setObjectName("logarithmic_y")
        self.gridLayout_16.addWidget(self.logarithmic_y, 3, 1, 1, 1)
        self.color_selector = QtWidgets.QComboBox(self.groupBox_2)
        self.color_selector.setObjectName("color_selector")
        self.color_selector.addItem("")
        self.color_selector.addItem("")
        self.color_selector.addItem("")
        self.color_selector.addItem("")
        self.color_selector.addItem("")
        self.color_selector.addItem("")
        self.color_selector.addItem("")
        self.gridLayout_16.addWidget(self.color_selector, 2, 1, 1, 1)
        self.normalizeXTof = QtWidgets.QCheckBox(self.groupBox_2)
        self.normalizeXTof.setObjectName("normalizeXTof")
        self.gridLayout_16.addWidget(self.normalizeXTof, 4, 0, 1, 1)
        self.xLamda.raise_()
        self.logarithmic_y.raise_()
        self.show_colorbars.raise_()
        self.tthPhi.raise_()
        self.color_selector.raise_()
        self.logarithmic_colorscale.raise_()
        self.normalizeXTof.raise_()
        self.verticalLayout_5.addWidget(self.groupBox_2)
        self.plotTab = QtWidgets.QTabWidget(self.mainSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plotTab.sizePolicy().hasHeightForWidth())
        self.plotTab.setSizePolicy(sizePolicy)
        self.plotTab.setDocumentMode(True)
        self.plotTab.setObjectName("plotTab")
        self.Overview_Tab = QtWidgets.QWidget()
        self.Overview_Tab.setObjectName("Overview_Tab")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.Overview_Tab)
        self.verticalLayout_13.setContentsMargins(0, 2, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.currentChannel = QtWidgets.QLabel(self.Overview_Tab)
        self.currentChannel.setAlignment(QtCore.Qt.AlignCenter)
        self.currentChannel.setObjectName("currentChannel")
        self.verticalLayout_13.addWidget(self.currentChannel)
        self.overviewSplitter = QtWidgets.QSplitter(self.Overview_Tab)
        self.overviewSplitter.setOrientation(QtCore.Qt.Vertical)
        self.overviewSplitter.setObjectName("overviewSplitter")
        self.frame = QtWidgets.QFrame(self.overviewSplitter)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_6.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.xy_overview = MPLWidget(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.xy_overview.sizePolicy().hasHeightForWidth())
        self.xy_overview.setSizePolicy(sizePolicy)
        self.xy_overview.setMinimumSize(QtCore.QSize(0, 100))
        self.xy_overview.setObjectName("xy_overview")
        self.horizontalLayout_6.addWidget(self.xy_overview)
        self.xtof_overview = MPLWidget(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.xtof_overview.sizePolicy().hasHeightForWidth())
        self.xtof_overview.setSizePolicy(sizePolicy)
        self.xtof_overview.setMinimumSize(QtCore.QSize(0, 100))
        self.xtof_overview.setObjectName("xtof_overview")
        self.horizontalLayout_6.addWidget(self.xtof_overview)
        self.widget_3 = QtWidgets.QWidget(self.overviewSplitter)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.frame1 = QtWidgets.QFrame(self.widget_3)
        self.frame1.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame1.setObjectName("frame1")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.frame1)
        self.horizontalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.frame_5 = QtWidgets.QFrame(self.frame1)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_17 = QtWidgets.QLabel(self.frame_5)
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.gridLayout_4.addWidget(self.label_17, 0, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.frame_5)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_11.setObjectName("label_11")
        self.gridLayout_4.addWidget(self.label_11, 1, 0, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.frame_5)
        self.label_15.setAlignment(QtCore.Qt.AlignCenter)
        self.label_15.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_15.setObjectName("label_15")
        self.gridLayout_4.addWidget(self.label_15, 2, 0, 1, 1)
        self.datasetDirectPixel = QtWidgets.QLabel(self.frame_5)
        self.datasetDirectPixel.setText("")
        self.datasetDirectPixel.setObjectName("datasetDirectPixel")
        self.gridLayout_4.addWidget(self.datasetDirectPixel, 0, 1, 1, 1)
        self.datasetDangle = QtWidgets.QLabel(self.frame_5)
        self.datasetDangle.setText("")
        self.datasetDangle.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetDangle.setObjectName("datasetDangle")
        self.gridLayout_4.addWidget(self.datasetDangle, 1, 1, 1, 1)
        self.datasetDangle0 = QtWidgets.QLabel(self.frame_5)
        self.datasetDangle0.setText("")
        self.datasetDangle0.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetDangle0.setObjectName("datasetDangle0")
        self.gridLayout_4.addWidget(self.datasetDangle0, 2, 1, 1, 1)
        self.horizontalLayout_13.addWidget(self.frame_5)
        self.widget_8 = QtWidgets.QWidget(self.frame1)
        self.widget_8.setObjectName("widget_8")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.widget_8)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.label_8 = QtWidgets.QLabel(self.widget_8)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_8.setObjectName("label_8")
        self.gridLayout_11.addWidget(self.label_8, 1, 0, 1, 1)
        self.frame_6 = QtWidgets.QFrame(self.widget_8)
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_6)
        self.gridLayout_9.setContentsMargins(0, 1, 0, 1)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_12 = QtWidgets.QLabel(self.frame_6)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_12.setObjectName("label_12")
        self.gridLayout_9.addWidget(self.label_12, 0, 0, 1, 1)
        self.datasetSangle = QtWidgets.QLabel(self.frame_6)
        self.datasetSangle.setText("")
        self.datasetSangle.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetSangle.setObjectName("datasetSangle")
        self.gridLayout_9.addWidget(self.datasetSangle, 0, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.frame_6)
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_13.setObjectName("label_13")
        self.gridLayout_9.addWidget(self.label_13, 1, 0, 1, 1)
        self.datasetAi = QtWidgets.QLabel(self.frame_6)
        self.datasetAi.setText("")
        self.datasetAi.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetAi.setObjectName("datasetAi")
        self.gridLayout_9.addWidget(self.datasetAi, 1, 1, 1, 1)
        self.gridLayout_11.addWidget(self.frame_6, 3, 0, 1, 2)
        self.datasetLambda = QtWidgets.QLabel(self.widget_8)
        self.datasetLambda.setText("")
        self.datasetLambda.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetLambda.setObjectName("datasetLambda")
        self.gridLayout_11.addWidget(self.datasetLambda, 1, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.widget_8)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_9.setObjectName("label_9")
        self.gridLayout_11.addWidget(self.label_9, 2, 0, 1, 1)
        self.datasetPCharge = QtWidgets.QLabel(self.widget_8)
        self.datasetPCharge.setText("")
        self.datasetPCharge.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetPCharge.setObjectName("datasetPCharge")
        self.gridLayout_11.addWidget(self.datasetPCharge, 2, 1, 1, 1)
        self.horizontalLayout_13.addWidget(self.widget_8)
        self.widget_7 = QtWidgets.QWidget(self.frame1)
        self.widget_7.setObjectName("widget_7")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.widget_7)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_10 = QtWidgets.QLabel(self.widget_7)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.label_10.setObjectName("label_10")
        self.gridLayout_10.addWidget(self.label_10, 2, 0, 1, 1)
        self.datasetTotCounts = QtWidgets.QLabel(self.widget_7)
        self.datasetTotCounts.setText("")
        self.datasetTotCounts.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetTotCounts.setObjectName("datasetTotCounts")
        self.gridLayout_10.addWidget(self.datasetTotCounts, 2, 1, 1, 1)
        self.datasetRate = QtWidgets.QLabel(self.widget_7)
        self.datasetRate.setText("")
        self.datasetRate.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetRate.setObjectName("datasetRate")
        self.gridLayout_10.addWidget(self.datasetRate, 3, 1, 1, 1)
        self.datasetTime = QtWidgets.QLabel(self.widget_7)
        self.datasetTime.setText("")
        self.datasetTime.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetTime.setObjectName("datasetTime")
        self.gridLayout_10.addWidget(self.datasetTime, 1, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.widget_7)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_10.addWidget(self.label_6, 1, 0, 1, 1)
        self.label_37 = QtWidgets.QLabel(self.widget_7)
        self.label_37.setAlignment(QtCore.Qt.AlignCenter)
        self.label_37.setObjectName("label_37")
        self.gridLayout_10.addWidget(self.label_37, 3, 0, 1, 1)
        self.datasetROI = QtWidgets.QLabel(self.widget_7)
        self.datasetROI.setText("")
        self.datasetROI.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.datasetROI.setObjectName("datasetROI")
        self.gridLayout_10.addWidget(self.datasetROI, 4, 1, 1, 1)
        self.counts_roi_label = QtWidgets.QLabel(self.widget_7)
        self.counts_roi_label.setAlignment(QtCore.Qt.AlignCenter)
        self.counts_roi_label.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.counts_roi_label.setObjectName("counts_roi_label")
        self.gridLayout_10.addWidget(self.counts_roi_label, 4, 0, 1, 1)
        self.horizontalLayout_13.addWidget(self.widget_7)
        self.verticalLayout_11.addWidget(self.frame1)
        self.frame_2 = QtWidgets.QFrame(self.widget_3)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_12.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setContentsMargins(4, 0, 4, -1)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.label_19 = QtWidgets.QLabel(self.frame_2)
        self.label_19.setObjectName("label_19")
        self.horizontalLayout_16.addWidget(self.label_19)
        self.matched_direct_beam_label = QtWidgets.QLabel(self.frame_2)
        self.matched_direct_beam_label.setIndent(10)
        self.matched_direct_beam_label.setObjectName("matched_direct_beam_label")
        self.horizontalLayout_16.addWidget(self.matched_direct_beam_label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_16.addItem(spacerItem)
        self.is_direct_beam_label = QtWidgets.QLabel(self.frame_2)
        self.is_direct_beam_label.setMinimumSize(QtCore.QSize(50, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.is_direct_beam_label.setFont(font)
        self.is_direct_beam_label.setText("")
        self.is_direct_beam_label.setObjectName("is_direct_beam_label")
        self.horizontalLayout_16.addWidget(self.is_direct_beam_label)
        self.verticalLayout_12.addLayout(self.horizontalLayout_16)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setContentsMargins(4, -1, 4, -1)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.direct_beam_runs_label = QtWidgets.QLabel(self.frame_2)
        self.direct_beam_runs_label.setObjectName("direct_beam_runs_label")
        self.horizontalLayout_7.addWidget(self.direct_beam_runs_label)
        self.normalization_list_label = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.normalization_list_label.sizePolicy().hasHeightForWidth())
        self.normalization_list_label.setSizePolicy(sizePolicy)
        self.normalization_list_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.normalization_list_label.setIndent(10)
        self.normalization_list_label.setObjectName("normalization_list_label")
        self.horizontalLayout_7.addWidget(self.normalization_list_label)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem1)
        self.label_18 = QtWidgets.QLabel(self.frame_2)
        self.label_18.setObjectName("label_18")
        self.horizontalLayout_7.addWidget(self.label_18)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.selectedChannel0 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel0.setChecked(True)
        self.selectedChannel0.setObjectName("selectedChannel0")
        self.gridLayout_7.addWidget(self.selectedChannel0, 0, 0, 1, 1)
        self.selectedChannel5 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel5.setObjectName("selectedChannel5")
        self.gridLayout_7.addWidget(self.selectedChannel5, 1, 1, 1, 1)
        self.selectedChannel7 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel7.setObjectName("selectedChannel7")
        self.gridLayout_7.addWidget(self.selectedChannel7, 1, 3, 1, 1)
        self.selectedChannel1 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel1.setObjectName("selectedChannel1")
        self.gridLayout_7.addWidget(self.selectedChannel1, 0, 1, 1, 1)
        self.selectedChannel4 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel4.setObjectName("selectedChannel4")
        self.gridLayout_7.addWidget(self.selectedChannel4, 1, 0, 1, 1)
        self.selectedChannel2 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel2.setObjectName("selectedChannel2")
        self.gridLayout_7.addWidget(self.selectedChannel2, 0, 2, 1, 1)
        self.selectedChannel3 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel3.setObjectName("selectedChannel3")
        self.gridLayout_7.addWidget(self.selectedChannel3, 0, 3, 1, 1)
        self.selectedChannel6 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel6.setObjectName("selectedChannel6")
        self.gridLayout_7.addWidget(self.selectedChannel6, 1, 2, 1, 1)
        self.selectedChannel8 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel8.setObjectName("selectedChannel8")
        self.gridLayout_7.addWidget(self.selectedChannel8, 2, 0, 1, 1)
        self.selectedChannel9 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel9.setObjectName("selectedChannel9")
        self.gridLayout_7.addWidget(self.selectedChannel9, 2, 1, 1, 1)
        self.selectedChannel10 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel10.setObjectName("selectedChannel10")
        self.gridLayout_7.addWidget(self.selectedChannel10, 2, 2, 1, 1)
        self.selectedChannel11 = QtWidgets.QRadioButton(self.frame_2)
        self.selectedChannel11.setObjectName("selectedChannel11")
        self.gridLayout_7.addWidget(self.selectedChannel11, 2, 3, 1, 1)
        self.horizontalLayout_7.addLayout(self.gridLayout_7)
        self.verticalLayout_12.addLayout(self.horizontalLayout_7)
        self.tabWidget = QtWidgets.QTabWidget(self.frame_2)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.reductionTable = QtWidgets.QTableWidget(self.tab)
        self.reductionTable.setEditTriggers(QtWidgets.QAbstractItemView.AnyKeyPressed|QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed)
        self.reductionTable.setProperty("showDropIndicator", False)
        self.reductionTable.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.reductionTable.setWordWrap(False)
        self.reductionTable.setRowCount(0)
        self.reductionTable.setObjectName("reductionTable")
        self.reductionTable.setColumnCount(13)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.reductionTable.setHorizontalHeaderItem(12, item)
        self.reductionTable.horizontalHeader().setVisible(True)
        self.reductionTable.horizontalHeader().setCascadingSectionResizes(False)
        self.reductionTable.horizontalHeader().setDefaultSectionSize(70)
        self.reductionTable.horizontalHeader().setMinimumSectionSize(20)
        self.reductionTable.horizontalHeader().setStretchLastSection(True)
        self.reductionTable.verticalHeader().setVisible(False)
        self.reductionTable.verticalHeader().setDefaultSectionSize(21)
        self.verticalLayout_16.addWidget(self.reductionTable)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.normalizeTable = QtWidgets.QTableWidget(self.tab_2)
        self.normalizeTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.normalizeTable.setObjectName("normalizeTable")
        self.normalizeTable.setColumnCount(8)
        self.normalizeTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.normalizeTable.setHorizontalHeaderItem(7, item)
        self.normalizeTable.horizontalHeader().setDefaultSectionSize(70)
        self.normalizeTable.horizontalHeader().setMinimumSectionSize(30)
        self.normalizeTable.horizontalHeader().setStretchLastSection(True)
        self.normalizeTable.verticalHeader().setVisible(False)
        self.normalizeTable.verticalHeader().setDefaultSectionSize(21)
        self.verticalLayout_17.addWidget(self.normalizeTable)
        self.tabWidget.addTab(self.tab_2, "")
        self.verticalLayout_12.addWidget(self.tabWidget)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.reduceButton = QtWidgets.QPushButton(self.frame_2)
        self.reduceButton.setObjectName("reduceButton")
        self.horizontalLayout_5.addWidget(self.reduceButton)
        self.verticalLayout_12.addLayout(self.horizontalLayout_5)
        self.verticalLayout_11.addWidget(self.frame_2)
        self.verticalLayout_13.addWidget(self.overviewSplitter)
        self.plotTab.addTab(self.Overview_Tab, "")
        self.XY_Tab = QtWidgets.QWidget()
        self.XY_Tab.setObjectName("XY_Tab")
        self.gridLayout = QtWidgets.QGridLayout(self.XY_Tab)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.frame_xy_mm = QtWidgets.QFrame(self.XY_Tab)
        self.frame_xy_mm.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xy_mm.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xy_mm.setObjectName("frame_xy_mm")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_xy_mm)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.xy_mm = MPLWidget(self.frame_xy_mm)
        self.xy_mm.setMinimumSize(QtCore.QSize(0, 0))
        self.xy_mm.setObjectName("xy_mm")
        self.verticalLayout_4.addWidget(self.xy_mm)
        self.gridLayout.addWidget(self.frame_xy_mm, 0, 1, 1, 1)
        self.frame_xy_pp = QtWidgets.QFrame(self.XY_Tab)
        self.frame_xy_pp.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xy_pp.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xy_pp.setObjectName("frame_xy_pp")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_xy_pp)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.xy_pp = MPLWidget(self.frame_xy_pp)
        self.xy_pp.setMinimumSize(QtCore.QSize(0, 0))
        self.xy_pp.setObjectName("xy_pp")
        self.verticalLayout_3.addWidget(self.xy_pp)
        self.gridLayout.addWidget(self.frame_xy_pp, 0, 0, 1, 1)
        self.frame_xy_sf = QtWidgets.QFrame(self.XY_Tab)
        self.frame_xy_sf.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xy_sf.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xy_sf.setObjectName("frame_xy_sf")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_xy_sf)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.xy_pm = MPLWidget(self.frame_xy_sf)
        self.xy_pm.setMinimumSize(QtCore.QSize(0, 0))
        self.xy_pm.setObjectName("xy_pm")
        self.horizontalLayout.addWidget(self.xy_pm)
        self.xy_mp = MPLWidget(self.frame_xy_sf)
        self.xy_mp.setMinimumSize(QtCore.QSize(0, 0))
        self.xy_mp.setObjectName("xy_mp")
        self.horizontalLayout.addWidget(self.xy_mp)
        self.gridLayout.addWidget(self.frame_xy_sf, 1, 0, 1, 2)
        self.plotTab.addTab(self.XY_Tab, "")
        self.XTof_Tab = QtWidgets.QWidget()
        self.XTof_Tab.setObjectName("XTof_Tab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.XTof_Tab)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.frame_xtof_mm = QtWidgets.QFrame(self.XTof_Tab)
        self.frame_xtof_mm.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xtof_mm.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xtof_mm.setObjectName("frame_xtof_mm")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_xtof_mm)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.xtof_mm = MPLWidget(self.frame_xtof_mm)
        self.xtof_mm.setObjectName("xtof_mm")
        self.verticalLayout_8.addWidget(self.xtof_mm)
        self.gridLayout_2.addWidget(self.frame_xtof_mm, 0, 1, 1, 1)
        self.frame_xtof_pp = QtWidgets.QFrame(self.XTof_Tab)
        self.frame_xtof_pp.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xtof_pp.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xtof_pp.setObjectName("frame_xtof_pp")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame_xtof_pp)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.xtof_pp = MPLWidget(self.frame_xtof_pp)
        self.xtof_pp.setObjectName("xtof_pp")
        self.verticalLayout_7.addWidget(self.xtof_pp)
        self.gridLayout_2.addWidget(self.frame_xtof_pp, 0, 0, 1, 1)
        self.frame_xtof_sf = QtWidgets.QFrame(self.XTof_Tab)
        self.frame_xtof_sf.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_xtof_sf.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_xtof_sf.setObjectName("frame_xtof_sf")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_xtof_sf)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.xtof_pm = MPLWidget(self.frame_xtof_sf)
        self.xtof_pm.setObjectName("xtof_pm")
        self.horizontalLayout_2.addWidget(self.xtof_pm)
        self.xtof_mp = MPLWidget(self.frame_xtof_sf)
        self.xtof_mp.setObjectName("xtof_mp")
        self.horizontalLayout_2.addWidget(self.xtof_mp)
        self.gridLayout_2.addWidget(self.frame_xtof_sf, 1, 0, 1, 2)
        self.plotTab.addTab(self.XTof_Tab, "")
        self.OffSpec_Tab = QtWidgets.QWidget()
        self.OffSpec_Tab.setObjectName("OffSpec_Tab")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.OffSpec_Tab)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_14 = QtWidgets.QLabel(self.OffSpec_Tab)
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_9.addWidget(self.label_14)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem2)
        self.label_21 = QtWidgets.QLabel(self.OffSpec_Tab)
        self.label_21.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_21.setObjectName("label_21")
        self.horizontalLayout_9.addWidget(self.label_21)
        self.offspecImin = QtWidgets.QDoubleSpinBox(self.OffSpec_Tab)
        self.offspecImin.setDecimals(2)
        self.offspecImin.setMinimum(-20.0)
        self.offspecImin.setMaximum(2.0)
        self.offspecImin.setSingleStep(0.25)
        self.offspecImin.setProperty("value", -6.0)
        self.offspecImin.setObjectName("offspecImin")
        self.horizontalLayout_9.addWidget(self.offspecImin)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem3)
        self.label_22 = QtWidgets.QLabel(self.OffSpec_Tab)
        self.label_22.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_22.setObjectName("label_22")
        self.horizontalLayout_9.addWidget(self.label_22)
        self.offspecImax = QtWidgets.QDoubleSpinBox(self.OffSpec_Tab)
        self.offspecImax.setMinimum(-10.0)
        self.offspecImax.setMaximum(10.0)
        self.offspecImax.setSingleStep(0.25)
        self.offspecImax.setObjectName("offspecImax")
        self.horizontalLayout_9.addWidget(self.offspecImax)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem4)
        self.apply_offspec_crop_button = QtWidgets.QPushButton(self.OffSpec_Tab)
        self.apply_offspec_crop_button.setObjectName("apply_offspec_crop_button")
        self.horizontalLayout_9.addWidget(self.apply_offspec_crop_button)
        self.refresh_offspec_button = QtWidgets.QPushButton(self.OffSpec_Tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.refresh_offspec_button.sizePolicy().hasHeightForWidth())
        self.refresh_offspec_button.setSizePolicy(sizePolicy)
        self.refresh_offspec_button.setObjectName("refresh_offspec_button")
        self.horizontalLayout_9.addWidget(self.refresh_offspec_button)
        self.gridLayout_5.addLayout(self.horizontalLayout_9, 1, 0, 1, 2)
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setContentsMargins(-1, -1, -1, 10)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setContentsMargins(-1, -1, -1, 10)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.kizmkfzVSqz = QtWidgets.QRadioButton(self.OffSpec_Tab)
        self.kizmkfzVSqz.setChecked(True)
        self.kizmkfzVSqz.setObjectName("kizmkfzVSqz")
        self.horizontalLayout_8.addWidget(self.kizmkfzVSqz)
        self.qxVSqz = QtWidgets.QRadioButton(self.OffSpec_Tab)
        self.qxVSqz.setObjectName("qxVSqz")
        self.horizontalLayout_8.addWidget(self.qxVSqz)
        self.kizVSkfz = QtWidgets.QRadioButton(self.OffSpec_Tab)
        self.kizVSkfz.setObjectName("kizVSkfz")
        self.horizontalLayout_8.addWidget(self.kizVSkfz)
        self.verticalLayout_10.addLayout(self.horizontalLayout_8)
        self.groupBox = QtWidgets.QGroupBox(self.OffSpec_Tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setMinimumSize(QtCore.QSize(0, 50))
        self.groupBox.setFlat(False)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_18.setContentsMargins(35, 9, -1, -1)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setContentsMargins(-1, -1, -1, 0)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.offspec_smooth_checkbox = QtWidgets.QCheckBox(self.groupBox)
        self.offspec_smooth_checkbox.setObjectName("offspec_smooth_checkbox")
        self.horizontalLayout_17.addWidget(self.offspec_smooth_checkbox)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem5)
        self.verticalLayout_18.addLayout(self.horizontalLayout_17)
        self.binning_frame = QtWidgets.QFrame(self.groupBox)
        self.binning_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.binning_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.binning_frame.setObjectName("binning_frame")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.binning_frame)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.offspec_binning_layout = QtWidgets.QHBoxLayout()
        self.offspec_binning_layout.setObjectName("offspec_binning_layout")
        self.label_36 = QtWidgets.QLabel(self.binning_frame)
        self.label_36.setObjectName("label_36")
        self.offspec_binning_layout.addWidget(self.label_36)
        self.offspec_x_min_spinbox = QtWidgets.QDoubleSpinBox(self.binning_frame)
        self.offspec_x_min_spinbox.setDecimals(5)
        self.offspec_x_min_spinbox.setMinimum(-10.0)
        self.offspec_x_min_spinbox.setMaximum(10.0)
        self.offspec_x_min_spinbox.setSingleStep(0.005)
        self.offspec_x_min_spinbox.setProperty("value", -0.015)
        self.offspec_x_min_spinbox.setObjectName("offspec_x_min_spinbox")
        self.offspec_binning_layout.addWidget(self.offspec_x_min_spinbox)
        self.label_41 = QtWidgets.QLabel(self.binning_frame)
        self.label_41.setObjectName("label_41")
        self.offspec_binning_layout.addWidget(self.label_41)
        self.offspec_x_max_spinbox = QtWidgets.QDoubleSpinBox(self.binning_frame)
        self.offspec_x_max_spinbox.setDecimals(5)
        self.offspec_x_max_spinbox.setMinimum(-10.0)
        self.offspec_x_max_spinbox.setMaximum(10.0)
        self.offspec_x_max_spinbox.setSingleStep(0.005)
        self.offspec_x_max_spinbox.setProperty("value", 0.015)
        self.offspec_x_max_spinbox.setObjectName("offspec_x_max_spinbox")
        self.offspec_binning_layout.addWidget(self.offspec_x_max_spinbox)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.offspec_binning_layout.addItem(spacerItem6)
        self.label_42 = QtWidgets.QLabel(self.binning_frame)
        self.label_42.setObjectName("label_42")
        self.offspec_binning_layout.addWidget(self.label_42)
        self.offspec_y_min_spinbox = QtWidgets.QDoubleSpinBox(self.binning_frame)
        self.offspec_y_min_spinbox.setDecimals(4)
        self.offspec_y_min_spinbox.setMinimum(-1.0)
        self.offspec_y_min_spinbox.setMaximum(10.0)
        self.offspec_y_min_spinbox.setSingleStep(0.01)
        self.offspec_y_min_spinbox.setObjectName("offspec_y_min_spinbox")
        self.offspec_binning_layout.addWidget(self.offspec_y_min_spinbox)
        self.label_43 = QtWidgets.QLabel(self.binning_frame)
        self.label_43.setObjectName("label_43")
        self.offspec_binning_layout.addWidget(self.label_43)
        self.offspec_y_max_spinbox = QtWidgets.QDoubleSpinBox(self.binning_frame)
        self.offspec_y_max_spinbox.setDecimals(4)
        self.offspec_y_max_spinbox.setMinimum(-1.0)
        self.offspec_y_max_spinbox.setMaximum(10.0)
        self.offspec_y_max_spinbox.setSingleStep(0.01)
        self.offspec_y_max_spinbox.setProperty("value", 0.15)
        self.offspec_y_max_spinbox.setObjectName("offspec_y_max_spinbox")
        self.offspec_binning_layout.addWidget(self.offspec_y_max_spinbox)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.offspec_binning_layout.addItem(spacerItem7)
        self.offspec_rebin_x_bins_label = QtWidgets.QLabel(self.binning_frame)
        self.offspec_rebin_x_bins_label.setObjectName("offspec_rebin_x_bins_label")
        self.offspec_binning_layout.addWidget(self.offspec_rebin_x_bins_label)
        self.offspec_rebin_x_bins_spinbox = QtWidgets.QSpinBox(self.binning_frame)
        self.offspec_rebin_x_bins_spinbox.setMinimum(1)
        self.offspec_rebin_x_bins_spinbox.setMaximum(1000)
        self.offspec_rebin_x_bins_spinbox.setSingleStep(10)
        self.offspec_rebin_x_bins_spinbox.setProperty("value", 120)
        self.offspec_rebin_x_bins_spinbox.setObjectName("offspec_rebin_x_bins_spinbox")
        self.offspec_binning_layout.addWidget(self.offspec_rebin_x_bins_spinbox)
        spacerItem8 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.offspec_binning_layout.addItem(spacerItem8)
        self.offspec_rebin_y_bins_label = QtWidgets.QLabel(self.binning_frame)
        self.offspec_rebin_y_bins_label.setToolTip("")
        self.offspec_rebin_y_bins_label.setObjectName("offspec_rebin_y_bins_label")
        self.offspec_binning_layout.addWidget(self.offspec_rebin_y_bins_label)
        self.offspec_rebin_y_bins_spinbox = QtWidgets.QSpinBox(self.binning_frame)
        self.offspec_rebin_y_bins_spinbox.setMinimum(1)
        self.offspec_rebin_y_bins_spinbox.setMaximum(1000)
        self.offspec_rebin_y_bins_spinbox.setSingleStep(10)
        self.offspec_rebin_y_bins_spinbox.setProperty("value", 120)
        self.offspec_rebin_y_bins_spinbox.setObjectName("offspec_rebin_y_bins_spinbox")
        self.offspec_binning_layout.addWidget(self.offspec_rebin_y_bins_spinbox)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.offspec_binning_layout.addItem(spacerItem9)
        self.verticalLayout_20.addLayout(self.offspec_binning_layout)
        self.verticalLayout_18.addWidget(self.binning_frame)
        self.offspec_slices_layout = QtWidgets.QHBoxLayout()
        self.offspec_slices_layout.setObjectName("offspec_slices_layout")
        self.offspec_slice_checkbox = QtWidgets.QCheckBox(self.groupBox)
        self.offspec_slice_checkbox.setObjectName("offspec_slice_checkbox")
        self.offspec_slices_layout.addWidget(self.offspec_slice_checkbox)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.offspec_slices_layout.addItem(spacerItem10)
        self.label_24 = QtWidgets.QLabel(self.groupBox)
        self.label_24.setObjectName("label_24")
        self.offspec_slices_layout.addWidget(self.label_24)
        self.slice_qz_min_spinbox = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.slice_qz_min_spinbox.setDecimals(5)
        self.slice_qz_min_spinbox.setMinimum(-1.0)
        self.slice_qz_min_spinbox.setMaximum(10.0)
        self.slice_qz_min_spinbox.setSingleStep(0.005)
        self.slice_qz_min_spinbox.setProperty("value", 0.05)
        self.slice_qz_min_spinbox.setObjectName("slice_qz_min_spinbox")
        self.offspec_slices_layout.addWidget(self.slice_qz_min_spinbox)
        self.label_40 = QtWidgets.QLabel(self.groupBox)
        self.label_40.setObjectName("label_40")
        self.offspec_slices_layout.addWidget(self.label_40)
        self.slice_qz_max_spinbox = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.slice_qz_max_spinbox.setDecimals(5)
        self.slice_qz_max_spinbox.setMinimum(-1.0)
        self.slice_qz_max_spinbox.setMaximum(10.0)
        self.slice_qz_max_spinbox.setSingleStep(0.005)
        self.slice_qz_max_spinbox.setProperty("value", 0.07)
        self.slice_qz_max_spinbox.setObjectName("slice_qz_max_spinbox")
        self.offspec_slices_layout.addWidget(self.slice_qz_max_spinbox)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.offspec_slices_layout.addItem(spacerItem11)
        self.offspec_err_weight_checkbox = QtWidgets.QCheckBox(self.groupBox)
        self.offspec_err_weight_checkbox.setCheckable(True)
        self.offspec_err_weight_checkbox.setChecked(False)
        self.offspec_err_weight_checkbox.setObjectName("offspec_err_weight_checkbox")
        self.offspec_slices_layout.addWidget(self.offspec_err_weight_checkbox)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.offspec_slices_layout.addItem(spacerItem12)
        self.label_23 = QtWidgets.QLabel(self.groupBox)
        self.label_23.setObjectName("label_23")
        self.offspec_slices_layout.addWidget(self.label_23)
        self.offspec_qz_bin_width_label = QtWidgets.QLabel(self.groupBox)
        self.offspec_qz_bin_width_label.setText("")
        self.offspec_qz_bin_width_label.setObjectName("offspec_qz_bin_width_label")
        self.offspec_slices_layout.addWidget(self.offspec_qz_bin_width_label)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.offspec_slices_layout.addItem(spacerItem13)
        self.verticalLayout_18.addLayout(self.offspec_slices_layout)
        self.verticalLayout_10.addWidget(self.groupBox)
        self.gridLayout_5.addLayout(self.verticalLayout_10, 0, 0, 1, 2)
        self.frame_3 = QtWidgets.QFrame(self.OffSpec_Tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.offspec_pp = MPLWidget(self.frame_3)
        self.offspec_pp.setObjectName("offspec_pp")
        self.gridLayout_12.addWidget(self.offspec_pp, 0, 0, 1, 1)
        self.offspec_mp = MPLWidget(self.frame_3)
        self.offspec_mp.setObjectName("offspec_mp")
        self.gridLayout_12.addWidget(self.offspec_mp, 1, 1, 1, 1)
        self.offspec_mm = MPLWidget(self.frame_3)
        self.offspec_mm.setObjectName("offspec_mm")
        self.gridLayout_12.addWidget(self.offspec_mm, 0, 1, 1, 1)
        self.offspec_pm = MPLWidget(self.frame_3)
        self.offspec_pm.setObjectName("offspec_pm")
        self.gridLayout_12.addWidget(self.offspec_pm, 1, 0, 1, 1)
        self.gridLayout_5.addWidget(self.frame_3, 2, 0, 1, 1)
        self.plotTab.addTab(self.OffSpec_Tab, "")
        self.gisansTab = QtWidgets.QWidget()
        self.gisansTab.setObjectName("gisansTab")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.gisansTab)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setSpacing(0)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout()
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.label_47 = QtWidgets.QLabel(self.gisansTab)
        self.label_47.setObjectName("label_47")
        self.horizontalLayout_22.addWidget(self.label_47)
        self.gisans_wl_min_spinbox = QtWidgets.QDoubleSpinBox(self.gisansTab)
        self.gisans_wl_min_spinbox.setSingleStep(0.5)
        self.gisans_wl_min_spinbox.setProperty("value", 2.0)
        self.gisans_wl_min_spinbox.setObjectName("gisans_wl_min_spinbox")
        self.horizontalLayout_22.addWidget(self.gisans_wl_min_spinbox)
        self.label_48 = QtWidgets.QLabel(self.gisansTab)
        self.label_48.setObjectName("label_48")
        self.horizontalLayout_22.addWidget(self.label_48)
        self.gisans_wl_max_spinbox = QtWidgets.QDoubleSpinBox(self.gisansTab)
        self.gisans_wl_max_spinbox.setSingleStep(0.5)
        self.gisans_wl_max_spinbox.setProperty("value", 8.0)
        self.gisans_wl_max_spinbox.setObjectName("gisans_wl_max_spinbox")
        self.horizontalLayout_22.addWidget(self.gisans_wl_max_spinbox)
        spacerItem14 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem14)
        self.label_49 = QtWidgets.QLabel(self.gisansTab)
        self.label_49.setObjectName("label_49")
        self.horizontalLayout_22.addWidget(self.label_49)
        self.gisans_wl_npts_spinbox = QtWidgets.QSpinBox(self.gisansTab)
        self.gisans_wl_npts_spinbox.setProperty("value", 4)
        self.gisans_wl_npts_spinbox.setObjectName("gisans_wl_npts_spinbox")
        self.horizontalLayout_22.addWidget(self.gisans_wl_npts_spinbox)
        spacerItem15 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem15)
        self.label_51 = QtWidgets.QLabel(self.gisansTab)
        self.label_51.setObjectName("label_51")
        self.horizontalLayout_22.addWidget(self.label_51)
        self.gisans_qz_npts_spinbox = QtWidgets.QSpinBox(self.gisansTab)
        self.gisans_qz_npts_spinbox.setSingleStep(5)
        self.gisans_qz_npts_spinbox.setProperty("value", 50)
        self.gisans_qz_npts_spinbox.setObjectName("gisans_qz_npts_spinbox")
        self.horizontalLayout_22.addWidget(self.gisans_qz_npts_spinbox)
        spacerItem16 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem16)
        self.label_52 = QtWidgets.QLabel(self.gisansTab)
        self.label_52.setObjectName("label_52")
        self.horizontalLayout_22.addWidget(self.label_52)
        self.gisans_qy_npts_spinbox = QtWidgets.QSpinBox(self.gisansTab)
        self.gisans_qy_npts_spinbox.setSingleStep(5)
        self.gisans_qy_npts_spinbox.setProperty("value", 50)
        self.gisans_qy_npts_spinbox.setObjectName("gisans_qy_npts_spinbox")
        self.horizontalLayout_22.addWidget(self.gisans_qy_npts_spinbox)
        spacerItem17 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem17)
        self.label_50 = QtWidgets.QLabel(self.gisansTab)
        self.label_50.setObjectName("label_50")
        self.horizontalLayout_22.addWidget(self.label_50)
        self.gisans_qz_radio = QtWidgets.QRadioButton(self.gisansTab)
        self.gisans_qz_radio.setChecked(True)
        self.gisans_qz_radio.setObjectName("gisans_qz_radio")
        self.horizontalLayout_22.addWidget(self.gisans_qz_radio)
        self.gisans_pf_radio = QtWidgets.QRadioButton(self.gisansTab)
        self.gisans_pf_radio.setObjectName("gisans_pf_radio")
        self.horizontalLayout_22.addWidget(self.gisans_pf_radio)
        self.verticalLayout_25.addLayout(self.horizontalLayout_22)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.label_46 = QtWidgets.QLabel(self.gisansTab)
        self.label_46.setObjectName("label_46")
        self.horizontalLayout_20.addWidget(self.label_46)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem18)
        self.label_16 = QtWidgets.QLabel(self.gisansTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_16.sizePolicy().hasHeightForWidth())
        self.label_16.setSizePolicy(sizePolicy)
        self.label_16.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_16.setObjectName("label_16")
        self.horizontalLayout_20.addWidget(self.label_16)
        self.gisansImin = QtWidgets.QDoubleSpinBox(self.gisansTab)
        self.gisansImin.setMinimum(-20.0)
        self.gisansImin.setMaximum(2.0)
        self.gisansImin.setSingleStep(0.25)
        self.gisansImin.setProperty("value", -6.0)
        self.gisansImin.setObjectName("gisansImin")
        self.horizontalLayout_20.addWidget(self.gisansImin)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem19)
        self.label_32 = QtWidgets.QLabel(self.gisansTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_32.sizePolicy().hasHeightForWidth())
        self.label_32.setSizePolicy(sizePolicy)
        self.label_32.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_32.setObjectName("label_32")
        self.horizontalLayout_20.addWidget(self.label_32)
        self.gisansImax = QtWidgets.QDoubleSpinBox(self.gisansTab)
        self.gisansImax.setMinimum(-20.0)
        self.gisansImax.setMaximum(2.0)
        self.gisansImax.setSingleStep(0.25)
        self.gisansImax.setObjectName("gisansImax")
        self.horizontalLayout_20.addWidget(self.gisansImax)
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem20)
        self.verticalLayout_25.addLayout(self.horizontalLayout_20)
        self.horizontalLayout_14.addLayout(self.verticalLayout_25)
        self.gridLayout_13.addLayout(self.horizontalLayout_14, 0, 0, 1, 2)
        self.frame_gisans_mm = QtWidgets.QFrame(self.gisansTab)
        self.frame_gisans_mm.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_gisans_mm.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_gisans_mm.setObjectName("frame_gisans_mm")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.frame_gisans_mm)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.gisans_pm = MPLWidget(self.frame_gisans_mm)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.gisans_pm.sizePolicy().hasHeightForWidth())
        self.gisans_pm.setSizePolicy(sizePolicy)
        self.gisans_pm.setMinimumSize(QtCore.QSize(100, 100))
        self.gisans_pm.setObjectName("gisans_pm")
        self.gridLayout_6.addWidget(self.gisans_pm, 1, 1, 1, 1)
        self.gisans_mp = MPLWidget(self.frame_gisans_mm)
        self.gisans_mp.setMinimumSize(QtCore.QSize(100, 100))
        self.gisans_mp.setObjectName("gisans_mp")
        self.gridLayout_6.addWidget(self.gisans_mp, 1, 2, 1, 1)
        self.gisans_mm = MPLWidget(self.frame_gisans_mm)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.gisans_mm.sizePolicy().hasHeightForWidth())
        self.gisans_mm.setSizePolicy(sizePolicy)
        self.gisans_mm.setMinimumSize(QtCore.QSize(100, 100))
        self.gisans_mm.setObjectName("gisans_mm")
        self.gridLayout_6.addWidget(self.gisans_mm, 0, 2, 1, 1)
        self.gisans_pp = MPLWidget(self.frame_gisans_mm)
        self.gisans_pp.setMinimumSize(QtCore.QSize(100, 100))
        self.gisans_pp.setObjectName("gisans_pp")
        self.gridLayout_6.addWidget(self.gisans_pp, 0, 1, 1, 1)
        self.verticalLayout_21.addLayout(self.gridLayout_6)
        self.gridLayout_13.addWidget(self.frame_gisans_mm, 1, 0, 1, 2)
        self.plotTab.addTab(self.gisansTab, "")
        self.daslogTab = QtWidgets.QWidget()
        self.daslogTab.setObjectName("daslogTab")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.daslogTab)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setSpacing(0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.daslogBox = QtWidgets.QGroupBox(self.daslogTab)
        self.daslogBox.setObjectName("daslogBox")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.daslogBox)
        self.verticalLayout_19.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.daslogTableBox = QtWidgets.QTableWidget(self.daslogBox)
        self.daslogTableBox.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.daslogTableBox.setProperty("showDropIndicator", False)
        self.daslogTableBox.setAlternatingRowColors(True)
        self.daslogTableBox.setObjectName("daslogTableBox")
        self.daslogTableBox.setColumnCount(3)
        self.daslogTableBox.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.daslogTableBox.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.daslogTableBox.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.daslogTableBox.setHorizontalHeaderItem(2, item)
        self.daslogTableBox.verticalHeader().setVisible(False)
        self.daslogTableBox.verticalHeader().setDefaultSectionSize(25)
        self.verticalLayout_19.addWidget(self.daslogTableBox)
        self.gridLayout_8.addWidget(self.daslogBox, 0, 0, 1, 1)
        self.plotTab.addTab(self.daslogTab, "")
        self.compareTab = QtWidgets.QWidget()
        self.compareTab.setObjectName("compareTab")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.compareTab)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.compare_widget = CompareWidget(self.compareTab)
        self.compare_widget.setObjectName("compare_widget")
        self.verticalLayout_9.addWidget(self.compare_widget)
        self.plotTab.addTab(self.compareTab, "")
        self.rightPlots = QtWidgets.QFrame(self.mainSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightPlots.sizePolicy().hasHeightForWidth())
        self.rightPlots.setSizePolicy(sizePolicy)
        self.rightPlots.setMinimumSize(QtCore.QSize(120, 0))
        self.rightPlots.setBaseSize(QtCore.QSize(350, 0))
        self.rightPlots.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.rightPlots.setFrameShadow(QtWidgets.QFrame.Raised)
        self.rightPlots.setObjectName("rightPlots")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.rightPlots)
        self.verticalLayout_2.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.plotSplitter = QtWidgets.QSplitter(self.rightPlots)
        self.plotSplitter.setOrientation(QtCore.Qt.Vertical)
        self.plotSplitter.setChildrenCollapsible(False)
        self.plotSplitter.setObjectName("plotSplitter")
        self.widget_4 = QtWidgets.QWidget(self.plotSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.widget_4.sizePolicy().hasHeightForWidth())
        self.widget_4.setSizePolicy(sizePolicy)
        self.widget_4.setObjectName("widget_4")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.widget_4)
        self.verticalLayout_24.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.label_35 = QtWidgets.QLabel(self.widget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_35.sizePolicy().hasHeightForWidth())
        self.label_35.setSizePolicy(sizePolicy)
        self.label_35.setAlignment(QtCore.Qt.AlignCenter)
        self.label_35.setObjectName("label_35")
        self.verticalLayout_24.addWidget(self.label_35)
        self.x_project = MPLWidget(self.widget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.x_project.sizePolicy().hasHeightForWidth())
        self.x_project.setSizePolicy(sizePolicy)
        self.x_project.setMinimumSize(QtCore.QSize(150, 100))
        self.x_project.setObjectName("x_project")
        self.verticalLayout_24.addWidget(self.x_project)
        self.widget_2 = QtWidgets.QWidget(self.plotSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_23.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_23.setObjectName("verticalLayout_23")
        self.label_34 = QtWidgets.QLabel(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_34.sizePolicy().hasHeightForWidth())
        self.label_34.setSizePolicy(sizePolicy)
        self.label_34.setAlignment(QtCore.Qt.AlignCenter)
        self.label_34.setObjectName("label_34")
        self.verticalLayout_23.addWidget(self.label_34)
        self.y_project = MPLWidget(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.y_project.sizePolicy().hasHeightForWidth())
        self.y_project.setSizePolicy(sizePolicy)
        self.y_project.setMinimumSize(QtCore.QSize(150, 100))
        self.y_project.setObjectName("y_project")
        self.verticalLayout_23.addWidget(self.y_project)
        self.widget = QtWidgets.QWidget(self.plotSplitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setObjectName("widget")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.label_33 = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_33.sizePolicy().hasHeightForWidth())
        self.label_33.setSizePolicy(sizePolicy)
        self.label_33.setAlignment(QtCore.Qt.AlignCenter)
        self.label_33.setObjectName("label_33")
        self.verticalLayout_22.addWidget(self.label_33)
        self.refl = MPLWidget(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.refl.sizePolicy().hasHeightForWidth())
        self.refl.setSizePolicy(sizePolicy)
        self.refl.setMinimumSize(QtCore.QSize(100, 100))
        self.refl.setObjectName("refl")
        self.verticalLayout_22.addWidget(self.refl)
        self.verticalLayout_2.addWidget(self.plotSplitter)
        self.verticalLayout_6.addWidget(self.mainSplitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1803, 22))
        self.menubar.setObjectName("menubar")
        self.menuReduction = QtWidgets.QMenu(self.menubar)
        self.menuReduction.setObjectName("menuReduction")
        self.menuAutomatics = QtWidgets.QMenu(self.menubar)
        self.menuAutomatics.setObjectName("menuAutomatics")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.mainToolbar = QtWidgets.QToolBar(MainWindow)
        self.mainToolbar.setMovable(False)
        self.mainToolbar.setFloatable(False)
        self.mainToolbar.setObjectName("mainToolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/General/document-open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon1)
        self.actionOpen.setObjectName("actionOpen")
        self.actionNorm = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/General/extractNormalization.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNorm.setIcon(icon2)
        self.actionNorm.setObjectName("actionNorm")
        self.actionAddPlot = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/General/addRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddPlot.setIcon(icon3)
        self.actionAddPlot.setObjectName("actionAddPlot")
        self.actionClear = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/General/clearRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClear.setIcon(icon4)
        self.actionClear.setObjectName("actionClear")
        self.actionAdjust_Dirct_Beam = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/General/tthZero.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdjust_Dirct_Beam.setIcon(icon5)
        self.actionAdjust_Dirct_Beam.setVisible(False)
        self.actionAdjust_Dirct_Beam.setObjectName("actionAdjust_Dirct_Beam")
        self.actionNormalizeScaling = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/General/totalReflection.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNormalizeScaling.setIcon(icon6)
        self.actionNormalizeScaling.setObjectName("actionNormalizeScaling")
        self.actionRemove = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/General/delRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove.setIcon(icon7)
        self.actionRemove.setObjectName("actionRemove")
        self.actionReduce = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/General/reduce.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReduce.setIcon(icon8)
        self.actionReduce.setObjectName("actionReduce")
        self.actionAutoYLimits = QtWidgets.QAction(MainWindow)
        self.actionAutoYLimits.setCheckable(True)
        self.actionAutoYLimits.setChecked(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/General/limitYauto.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutoYLimits.setIcon(icon9)
        self.actionAutoYLimits.setObjectName("actionAutoYLimits")
        self.actionAutomaticXPeak = QtWidgets.QAction(MainWindow)
        self.actionAutomaticXPeak.setCheckable(True)
        self.actionAutomaticXPeak.setChecked(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/General/fitXPos.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutomaticXPeak.setIcon(icon10)
        self.actionAutomaticXPeak.setObjectName("actionAutomaticXPeak")
        self.actionClear_Overwrite = QtWidgets.QAction(MainWindow)
        self.actionClear_Overwrite.setVisible(False)
        self.actionClear_Overwrite.setObjectName("actionClear_Overwrite")
        self.actionLoad_Extraction = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/MPL Toolbar/document-open-reduced.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLoad_Extraction.setIcon(icon11)
        self.actionLoad_Extraction.setObjectName("actionLoad_Extraction")
        self.actionClear_Normalizations = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/General/clearNorm.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClear_Normalizations.setIcon(icon12)
        self.actionClear_Normalizations.setObjectName("actionClear_Normalizations")
        self.actionOpen_Compare_Window = QtWidgets.QAction(MainWindow)
        self.actionOpen_Compare_Window.setObjectName("actionOpen_Compare_Window")
        self.actionAdvanced_Background = QtWidgets.QAction(MainWindow)
        self.actionAdvanced_Background.setVisible(False)
        self.actionAdvanced_Background.setObjectName("actionAdvanced_Background")
        self.actionOpen_Sum = QtWidgets.QAction(MainWindow)
        self.actionOpen_Sum.setObjectName("actionOpen_Sum")
        self.actionCut_Points = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/General/cutPoints.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut_Points.setIcon(icon13)
        self.actionCut_Points.setObjectName("actionCut_Points")
        self.actionAuto_Reflectivity = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/General/autoRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAuto_Reflectivity.setIcon(icon14)
        self.actionAuto_Reflectivity.setObjectName("actionAuto_Reflectivity")
        self.actionStrip_Overlap = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/General/stripOverlap.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStrip_Overlap.setIcon(icon15)
        self.actionStrip_Overlap.setObjectName("actionStrip_Overlap")
        self.actionPolarization = QtWidgets.QAction(MainWindow)
        self.actionPolarization.setVisible(False)
        self.actionPolarization.setObjectName("actionPolarization")
        self.actionRaw_Data_Comparison = QtWidgets.QAction(MainWindow)
        self.actionRaw_Data_Comparison.setVisible(False)
        self.actionRaw_Data_Comparison.setObjectName("actionRaw_Data_Comparison")
        self.actionIPython_Console = QtWidgets.QAction(MainWindow)
        self.actionIPython_Console.setObjectName("actionIPython_Console")
        self.actionQuick_Reduce = QtWidgets.QAction(MainWindow)
        self.actionQuick_Reduce.setObjectName("actionQuick_Reduce")
        self.actionBrowse_NXS_File = QtWidgets.QAction(MainWindow)
        self.actionBrowse_NXS_File.setObjectName("actionBrowse_NXS_File")
        self.actionFilter_Points = QtWidgets.QAction(MainWindow)
        self.actionFilter_Points.setObjectName("actionFilter_Points")
        self.actionOpen_Reduction_Preview = QtWidgets.QAction(MainWindow)
        self.actionOpen_Reduction_Preview.setObjectName("actionOpen_Reduction_Preview")
        self.actionAutoNorm = QtWidgets.QAction(MainWindow)
        self.actionAutoNorm.setCheckable(True)
        self.actionAutoNorm.setChecked(True)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/General/autoNorm.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutoNorm.setIcon(icon16)
        self.actionAutoNorm.setObjectName("actionAutoNorm")
        self.actionSearch_Database = QtWidgets.QAction(MainWindow)
        self.actionSearch_Database.setObjectName("actionSearch_Database")
        self.actionExport_Raw_Data = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/General/exportRawData.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_Raw_Data.setIcon(icon17)
        self.actionExport_Raw_Data.setObjectName("actionExport_Raw_Data")
        self.action_use_common_ranges = QtWidgets.QAction(MainWindow)
        self.action_use_common_ranges.setCheckable(True)
        self.action_use_common_ranges.setChecked(True)
        self.action_use_common_ranges.setObjectName("action_use_common_ranges")
        self.actionRemove_Normalization = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/General/delNormalization.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_Normalization.setIcon(icon18)
        self.actionRemove_Normalization.setObjectName("actionRemove_Normalization")
        self.actionResult_Viewer = QtWidgets.QAction(MainWindow)
        self.actionResult_Viewer.setObjectName("actionResult_Viewer")
        self.actionOpenSum = QtWidgets.QAction(MainWindow)
        self.actionOpenSum.setObjectName("actionOpenSum")
        self.menuReduction.addAction(self.actionNorm)
        self.menuReduction.addAction(self.actionRemove_Normalization)
        self.menuReduction.addAction(self.actionClear_Normalizations)
        self.menuReduction.addSeparator()
        self.menuReduction.addAction(self.actionAddPlot)
        self.menuReduction.addAction(self.actionRemove)
        self.menuReduction.addAction(self.actionClear)
        self.menuReduction.addSeparator()
        self.menuReduction.addAction(self.actionReduce)
        self.menuAutomatics.addAction(self.actionAutomaticXPeak)
        self.menuAutomatics.addAction(self.actionAutoYLimits)
        self.menuAutomatics.addAction(self.actionAutoNorm)
        self.menuAutomatics.addSeparator()
        self.menuAutomatics.addAction(self.actionNormalizeScaling)
        self.menuAutomatics.addAction(self.actionCut_Points)
        self.menuAutomatics.addSeparator()
        self.menuAutomatics.addAction(self.actionAuto_Reflectivity)
        self.menuAutomatics.addSeparator()
        self.menuAutomatics.addAction(self.actionStrip_Overlap)
        self.menuAutomatics.addSeparator()
        self.menuAutomatics.addAction(self.action_use_common_ranges)
        self.menuAutomatics.addSeparator()
        self.menuAutomatics.addAction(self.actionResult_Viewer)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionOpenSum)
        self.menuFile.addAction(self.actionLoad_Extraction)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuReduction.menuAction())
        self.menubar.addAction(self.menuAutomatics.menuAction())
        self.mainToolbar.addAction(self.actionOpen)
        self.mainToolbar.addAction(self.actionLoad_Extraction)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionNorm)
        self.mainToolbar.addAction(self.actionRemove_Normalization)
        self.mainToolbar.addAction(self.actionClear_Normalizations)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionAddPlot)
        self.mainToolbar.addAction(self.actionRemove)
        self.mainToolbar.addAction(self.actionClear)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionReduce)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionAutomaticXPeak)
        self.mainToolbar.addAction(self.actionAutoYLimits)
        self.mainToolbar.addAction(self.actionAutoNorm)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionNormalizeScaling)
        self.mainToolbar.addAction(self.actionCut_Points)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionAuto_Reflectivity)
        self.mainToolbar.addSeparator()
        self.mainToolbar.addAction(self.actionAdjust_Dirct_Beam)
        self.mainToolbar.addAction(self.actionStrip_Overlap)

        self.retranslateUi(MainWindow)
        self.toolBox.setCurrentIndex(0)
        self.color_selector.setCurrentIndex(3)
        self.plotTab.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.actionOpen.triggered.connect(MainWindow.file_open_dialog)
        self.plotTab.currentChanged['int'].connect(MainWindow.plotActiveTab)
        self.actionNorm.triggered.connect(MainWindow.setNorm)
        self.actionAddPlot.triggered.connect(MainWindow.addRefList)
        self.actionClear.triggered.connect(MainWindow.clearRefList)
        self.actionNormalizeScaling.triggered.connect(MainWindow.normalizeTotalReflection)
        self.actionRemove.triggered.connect(MainWindow.removeRefList)
        self.kizVSkfz.clicked.connect(MainWindow.plotActiveTab)
        self.qxVSqz.clicked.connect(MainWindow.plotActiveTab)
        self.kizmkfzVSqz.clicked.connect(MainWindow.plotActiveTab)
        self.actionReduce.triggered.connect(MainWindow.reduceDatasets)
        self.actionLoad_Extraction.triggered.connect(MainWindow.loadExtraction)
        self.reduceButton.clicked.connect(MainWindow.reduceDatasets)
        self.reductionTable.itemChanged['QTableWidgetItem*'].connect(MainWindow.reductionTableChanged)
        self.actionClear_Normalizations.triggered.connect(MainWindow.clearNormList)
        self.offspecImin.editingFinished.connect(MainWindow.change_offspec_colorscale)
        self.offspecImax.editingFinished.connect(MainWindow.change_offspec_colorscale)
        self.gisansImin.editingFinished.connect(MainWindow.change_gisans_colorscale)
        self.gisansImax.editingFinished.connect(MainWindow.change_gisans_colorscale)
        self.actionAdvanced_Background.triggered.connect(MainWindow.open_advanced_background)
        self.refresh_offspec_button.pressed.connect(MainWindow.refresh_offspec)
        self.actionOpen_Sum.triggered.connect(MainWindow.fileOpenSumDialog)
        self.refScale.valueChanged['double'].connect(MainWindow.changeRegionValues)
        self.color_selector.currentIndexChanged['int'].connect(MainWindow.toggleColorbars)
        self.show_colorbars.stateChanged['int'].connect(MainWindow.toggleColorbars)
        self.refYWidth.editingFinished.connect(MainWindow.changeRegionValues)
        self.refYPos.editingFinished.connect(MainWindow.changeRegionValues)
        self.file_list.itemSelectionChanged.connect(MainWindow.file_open_from_list)
        self.refXPos.editingFinished.connect(MainWindow.changeRegionValues)
        self.bgCenter.valueChanged['double'].connect(MainWindow.changeRegionValues)
        self.refXWidth.editingFinished.connect(MainWindow.changeRegionValues)
        self.bgWidth.valueChanged['double'].connect(MainWindow.changeRegionValues)
        self.rangeStart.editingFinished.connect(MainWindow.changeRegionValues)
        self.rangeEnd.editingFinished.connect(MainWindow.changeRegionValues)
        self.fanReflectivity.toggled['bool'].connect(MainWindow.changeRegionValues)
        self.normalizeXTof.stateChanged['int'].connect(MainWindow.toggleColorbars)
        self.logarithmic_colorscale.stateChanged['int'].connect(MainWindow.toggleColorbars)
        self.logarithmic_y.stateChanged['int'].connect(MainWindow.replotProjections)
        self.numberSearchEntry.returnPressed.connect(MainWindow.openByNumber)
        self.xLamda.stateChanged['int'].connect(MainWindow.toggleColorbars)
        self.tthPhi.stateChanged['int'].connect(MainWindow.toggleColorbars)
        self.trustDANGLE.toggled['bool'].connect(MainWindow.changeRegionValues)
        self.reload_file_button.pressed.connect(MainWindow.reload_file)
        self.actionCut_Points.triggered.connect(MainWindow.cutPoints)
        self.actionAuto_Reflectivity.triggered.connect(MainWindow.autoRef)
        self.actionStrip_Overlap.triggered.connect(MainWindow.stripOverlap)
        self.selectedChannel0.released.connect(MainWindow.file_loaded)
        self.selectedChannel1.released.connect(MainWindow.file_loaded)
        self.selectedChannel2.released.connect(MainWindow.file_loaded)
        self.selectedChannel3.released.connect(MainWindow.file_loaded)
        self.bgActive.released.connect(MainWindow.changeRegionValues)
        self.actionPolarization.triggered.connect(MainWindow.open_polarization_window)
        self.actionRaw_Data_Comparison.triggered.connect(MainWindow.open_rawdata_dialog)
        self.selectedChannel4.released.connect(MainWindow.file_loaded)
        self.selectedChannel5.released.connect(MainWindow.file_loaded)
        self.selectedChannel6.released.connect(MainWindow.file_loaded)
        self.selectedChannel7.released.connect(MainWindow.file_loaded)
        self.selectedChannel8.released.connect(MainWindow.file_loaded)
        self.selectedChannel9.released.connect(MainWindow.file_loaded)
        self.selectedChannel10.released.connect(MainWindow.file_loaded)
        self.selectedChannel11.released.connect(MainWindow.file_loaded)
        self.refresh_list.clicked.connect(MainWindow.refresh_file_list)
        self.match_direct_beam_button.clicked.connect(MainWindow.match_direct_beam_clicked)
        self.reductionTable.cellActivated['int','int'].connect(MainWindow.reduction_cell_activated)
        self.normalizeTable.cellActivated['int','int'].connect(MainWindow.direct_beam_cell_activated)
        self.actionRemove_Normalization.triggered.connect(MainWindow.remove_normalization)
        self.set_dirpix_checkbox.toggled['bool'].connect(MainWindow.changeRegionValues)
        self.set_dangle0_checkbox.toggled['bool'].connect(MainWindow.changeRegionValues)
        self.dangle0Overwrite.editingFinished.connect(MainWindow.changeRegionValues)
        self.directPixelOverwrite.editingFinished.connect(MainWindow.changeRegionValues)
        self.final_rebin_checkbox.toggled['bool'].connect(MainWindow.changeRegionValues)
        self.q_rebin_spinbox.editingFinished.connect(MainWindow.changeRegionValues)
        self.actionResult_Viewer.triggered.connect(MainWindow.show_results)
        self.apply_offspec_crop_button.clicked.connect(MainWindow.apply_offspec_crop)
        self.offspec_smooth_checkbox.stateChanged['int'].connect(MainWindow.toggle_smoothing)
        self.offspec_rebin_y_bins_spinbox.valueChanged['int'].connect(MainWindow.update_offspec_qz_bin_width)
        self.offspec_y_max_spinbox.valueChanged['double'].connect(MainWindow.update_offspec_qz_bin_width)
        self.offspec_y_min_spinbox.valueChanged['double'].connect(MainWindow.update_offspec_qz_bin_width)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.numberSearchEntry, self.histogramActive)
        MainWindow.setTabOrder(self.histogramActive, self.eventActive)
        MainWindow.setTabOrder(self.eventActive, self.oldFormatActive)
        MainWindow.setTabOrder(self.oldFormatActive, self.eventTofBins)
        MainWindow.setTabOrder(self.eventTofBins, self.eventBinMode)
        MainWindow.setTabOrder(self.eventBinMode, self.eventSplit)
        MainWindow.setTabOrder(self.eventSplit, self.eventSplitItems)
        MainWindow.setTabOrder(self.eventSplitItems, self.eventSplitIndex)
        MainWindow.setTabOrder(self.eventSplitIndex, self.file_list)
        MainWindow.setTabOrder(self.file_list, self.refYPos)
        MainWindow.setTabOrder(self.refYPos, self.refYWidth)
        MainWindow.setTabOrder(self.refYWidth, self.refXPos)
        MainWindow.setTabOrder(self.refXPos, self.refXWidth)
        MainWindow.setTabOrder(self.refXWidth, self.bgCenter)
        MainWindow.setTabOrder(self.bgCenter, self.bgWidth)
        MainWindow.setTabOrder(self.bgWidth, self.refScale)
        MainWindow.setTabOrder(self.refScale, self.rangeStart)
        MainWindow.setTabOrder(self.rangeStart, self.rangeEnd)
        MainWindow.setTabOrder(self.rangeEnd, self.directPixelOverwrite)
        MainWindow.setTabOrder(self.directPixelOverwrite, self.trustDANGLE)
        MainWindow.setTabOrder(self.trustDANGLE, self.trustSANGLE)
        MainWindow.setTabOrder(self.trustSANGLE, self.fanReflectivity)
        MainWindow.setTabOrder(self.fanReflectivity, self.show_colorbars)
        MainWindow.setTabOrder(self.show_colorbars, self.color_selector)
        MainWindow.setTabOrder(self.color_selector, self.logarithmic_colorscale)
        MainWindow.setTabOrder(self.logarithmic_colorscale, self.logarithmic_y)
        MainWindow.setTabOrder(self.logarithmic_y, self.xLamda)
        MainWindow.setTabOrder(self.xLamda, self.tthPhi)
        MainWindow.setTabOrder(self.tthPhi, self.plotTab)
        MainWindow.setTabOrder(self.plotTab, self.tabWidget)
        MainWindow.setTabOrder(self.tabWidget, self.reductionTable)
        MainWindow.setTabOrder(self.reductionTable, self.reduceButton)
        MainWindow.setTabOrder(self.reduceButton, self.normalizeTable)
        MainWindow.setTabOrder(self.normalizeTable, self.offspecImin)
        MainWindow.setTabOrder(self.offspecImin, self.offspecImax)
        MainWindow.setTabOrder(self.offspecImax, self.daslogTableBox)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "QuickNXS"))
        self.label_28.setToolTip(_translate("MainWindow", "Search for a file by measurement number"))
        self.label_28.setText(_translate("MainWindow", "Open Number:"))
        self.numberSearchEntry.setToolTip(_translate("MainWindow", "Search for a file by measurement number"))
        self.histogramActive.setText(_translate("MainWindow", "Histogram"))
        self.eventActive.setText(_translate("MainWindow", "Event"))
        self.oldFormatActive.setText(_translate("MainWindow", "Old"))
        self.label_27.setToolTip(_translate("MainWindow", "The number of bins for the Time of Flight channels"))
        self.label_27.setText(_translate("MainWindow", "Bin width"))
        self.eventTofBins.setToolTip(_translate("MainWindow", "TOF bin width"))
        self.eventBinMode.setToolTip(_translate("MainWindow", "<html><head/><body><p>How to bin the time of flight channels:</p><p>  Linear: Equally spaced in ToF</p><p>  1/x: Equally spaced in Q</p></body></html>"))
        self.eventBinMode.setItemText(0, _translate("MainWindow", "Equal ΔToF"))
        self.label_38.setText(_translate("MainWindow", "Index"))
        self.label_39.setText(_translate("MainWindow", "Items"))
        self.eventSplit.setText(_translate("MainWindow", "Split by event time"))
        self.eventTotalTimeLabel.setText(_translate("MainWindow", "(0min)"))
        self.reload_file_button.setText(_translate("MainWindow", "Reload Active File"))
        self.refresh_list.setText(_translate("MainWindow", "Refresh"))
        self.match_direct_beam_button.setText(_translate("MainWindow", "Match Direct Beam"))
        self.refYPos.setToolTip(_translate("MainWindow", "Center of region used for extraction"))
        self.label_3.setToolTip(_translate("MainWindow", "Y Pixel Window"))
        self.label_3.setText(_translate("MainWindow", "Y"))
        self.label_2.setText(_translate("MainWindow", "Width"))
        self.rangeEnd.setToolTip(_translate("MainWindow", "<html><head/><body><p>Remove points from the extracted intensity on the high Q side. </p><p>Uses the full ToF range available in the file, so it is possible it does not have any effect for lower values.</p></body></html>"))
        self.refXPos.setToolTip(_translate("MainWindow", "Center of region used for extraction"))
        self.bgWidth.setToolTip(_translate("MainWindow", "Width of region used for extraction"))
        self.bgCenter.setToolTip(_translate("MainWindow", "Center of region used for extraction"))
        self.label_4.setToolTip(_translate("MainWindow", "X Pixel Window"))
        self.label_4.setText(_translate("MainWindow", "X"))
        self.refScale.setToolTip(_translate("MainWindow", "Scaling factor for the reflectivity in powers of 10"))
        self.rangeStart.setToolTip(_translate("MainWindow", "<html><head/><body><p>Remove points from the extracted intensity on the low Q side. </p><p>Uses the full ToF range available in the file, so it is possible it does not have any effect for lower values.</p></body></html>"))
        self.refXWidth.setToolTip(_translate("MainWindow", "Width of region used for extraction"))
        self.refYWidth.setToolTip(_translate("MainWindow", "Width of region used for extraction"))
        self.label_20.setText(_translate("MainWindow", "Cut Pts"))
        self.label.setText(_translate("MainWindow", "Position"))
        self.label_5.setToolTip(_translate("MainWindow", "Scaling factor for the reflectivity in powers of 10"))
        self.label_5.setText(_translate("MainWindow", "Scale 10^"))
        self.bgActive.setText(_translate("MainWindow", "BG X"))
        self.final_rebin_checkbox.setToolTip(_translate("MainWindow", "Check for apply a final Q rebinning"))
        self.final_rebin_checkbox.setText(_translate("MainWindow", "Final rebin"))
        self.label_45.setText(_translate("MainWindow", "Q steps"))
        self.q_rebin_spinbox.setToolTip(_translate("MainWindow", "Step size in Q for rebinning. Negative number produce a logarithmic binning"))
        self.q_rebin_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("MainWindow", "Reflectivity Extraction (Basic)"))
        self.directPixelOverwrite.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite the direct pixel value, read from the file.</p><p>Usefull if the wrong values have been written during the measurement.</p></body></html>"))
        self.label_30.setText(_translate("MainWindow", "Trusted angle:"))
        self.trustDANGLE.setText(_translate("MainWindow", "DANGLE"))
        self.trustSANGLE.setText(_translate("MainWindow", "SANGLE"))
        self.fanReflectivity.setToolTip(_translate("MainWindow", "<html><head/><body><p>Evaluate Q for each X line of the reflectivity and combine these measurements.</p><p>Can be used with a large X-width of e.g. 15 for samples scattering to a large 2θ area.</p></body></html>"))
        self.fanReflectivity.setText(_translate("MainWindow", "Constant-Q binning"))
        self.set_dangle0_checkbox.setText(_translate("MainWindow", "Set Dangle0"))
        self.set_dirpix_checkbox.setText(_translate("MainWindow", "Set Direct Pixel"))
        self.normalize_to_unity_checkbox.setToolTip(_translate("MainWindow", "Normalize the total reflectivity plateau to unity when stitching"))
        self.normalize_to_unity_checkbox.setText(_translate("MainWindow", "Normalize to unity when stitching"))
        self.label_29.setText(_translate("MainWindow", "Critical Q cutoff"))
        self.normalization_q_cutoff_spinbox.setToolTip(_translate("MainWindow", "Q-value below which the reflectivity should be 1."))
        self.label_31.setText(_translate("MainWindow", "Sample size:"))
        self.sample_size_spinbox.setSuffix(_translate("MainWindow", " mm"))
        self.label_53.setText(_translate("MainWindow", "Bandwidth:"))
        self.bandwidth_spinbox.setToolTip(_translate("MainWindow", "Bandwidth to use to select the TOF range when loading data."))
        self.bandwidth_spinbox.setSuffix(_translate("MainWindow", " A"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("MainWindow", "Reflectivity Extraction (Advanced)"))
        self.label_26.setText(_translate("MainWindow", "ROI bck"))
        self.fit_within_roi_checkbox.setToolTip(_translate("MainWindow", "Once the reflected peak ROI is selected, you can try to fine tune this ROI by fitting for a peak within that region and updating the ROI according to the location found. Check the following box if you want to find a peak within the ROI and redefine the ROI afterwards."))
        self.fit_within_roi_checkbox.setText(_translate("MainWindow", "Fit peak within ROI"))
        self.roi_used_label.setToolTip(_translate("MainWindow", "Indicate whether the peak ROI was actually used when loading the data."))
        self.roi_used_label.setText(_translate("MainWindow", "Unknown"))
        self.label_25.setText(_translate("MainWindow", "ROI peak"))
        self.roi_peak_label.setToolTip(_translate("MainWindow", "ROI a in the meta-data"))
        self.roi_peak_label.setText(_translate("MainWindow", "0 - 0"))
        self.roi_bck_label.setToolTip(_translate("MainWindow", "ROI a in the meta-data"))
        self.roi_bck_label.setText(_translate("MainWindow", "0 - 0"))
        self.label_7.setText(_translate("MainWindow", "Was ROI used?"))
        self.use_side_bck_checkbox.setToolTip(_translate("MainWindow", "As an alternative to using the 2nd ROI, you can use a region around the reflected peak to estimate the background. Check the following box if you want to use the region on each side of the peak to estimate your background."))
        self.use_side_bck_checkbox.setText(_translate("MainWindow", "Use side background"))
        self.use_roi_checkbox.setToolTip(_translate("MainWindow", "The ROI in the data file is used to determine the reflectivity peak position. If this ROI is invalid, the system will try to find an appropriate region to use."))
        self.use_roi_checkbox.setText(_translate("MainWindow", "Use meta-data ROI"))
        self.use_bck_roi_checkbox.setToolTip(_translate("MainWindow", "A second ROI is available in the data file and can be used to define the background. Check the following box if you want to use the 2nd ROI for your background, otherwise a default region will be used."))
        self.use_bck_roi_checkbox.setText(_translate("MainWindow", "Bck?"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_3), _translate("MainWindow", "Peak Finder"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Plot Options"))
        self.xLamda.setToolTip(_translate("MainWindow", "Replace ToF axis with wavelength for the maps"))
        self.xLamda.setText(_translate("MainWindow", "X-λ Maps"))
        self.tthPhi.setToolTip(_translate("MainWindow", "Replace X and Y axes by the according scattering angle for the maps"))
        self.tthPhi.setText(_translate("MainWindow", "2θ-φ Maps"))
        self.show_colorbars.setToolTip(_translate("MainWindow", "Show a colorbar for the map plots"))
        self.show_colorbars.setText(_translate("MainWindow", "Colorbars"))
        self.logarithmic_colorscale.setToolTip(_translate("MainWindow", "Logarithmic colorscale in the maps"))
        self.logarithmic_colorscale.setText(_translate("MainWindow", "Log Colorscale"))
        self.logarithmic_y.setToolTip(_translate("MainWindow", "Logarithmic Y-scale for the projections and reflectivity"))
        self.logarithmic_y.setText(_translate("MainWindow", "Log Y for lines"))
        self.color_selector.setToolTip(_translate("MainWindow", "Select the color scale from a list of presets"))
        self.color_selector.setCurrentText(_translate("MainWindow", "jet"))
        self.color_selector.setItemText(0, _translate("MainWindow", "default"))
        self.color_selector.setItemText(1, _translate("MainWindow", "gist_ncar"))
        self.color_selector.setItemText(2, _translate("MainWindow", "gist_rainbow"))
        self.color_selector.setItemText(3, _translate("MainWindow", "jet"))
        self.color_selector.setItemText(4, _translate("MainWindow", "hsv"))
        self.color_selector.setItemText(5, _translate("MainWindow", "hot"))
        self.color_selector.setItemText(6, _translate("MainWindow", "binary"))
        self.normalizeXTof.setToolTip(_translate("MainWindow", "Normalize the intensity in the X-ToF maps by the incident beam measurement"))
        self.normalizeXTof.setText(_translate("MainWindow", "Norm. X-ToF/λ"))
        self.currentChannel.setToolTip(_translate("MainWindow", "Displays information about the dataset selected at the moment"))
        self.currentChannel.setText(_translate("MainWindow", "Dataset information will be displayed here after loading"))
        self.label_17.setToolTip(_translate("MainWindow", "Direct pixel value read from file, if overwrite is active, the read value is in brackets"))
        self.label_17.setText(_translate("MainWindow", "Direct Pixel"))
        self.label_11.setToolTip(_translate("MainWindow", "Detector Angle value read from file"))
        self.label_11.setText(_translate("MainWindow", "DANGLE"))
        self.label_15.setToolTip(_translate("MainWindow", "Two theta value calculated from file, if DANGLE0 overwrite is active, the read value is in brackets"))
        self.label_15.setText(_translate("MainWindow", "DANGLE0"))
        self.datasetDirectPixel.setToolTip(_translate("MainWindow", "Direct pixel value read from file, if overwrite is active, the read value is in brackets"))
        self.datasetDangle.setToolTip(_translate("MainWindow", "Detector Angle value read from file"))
        self.datasetDangle0.setToolTip(_translate("MainWindow", "Two theta value calculated from file, if DANGLE0 overwrite is active, the read value is in brackets"))
        self.label_8.setToolTip(_translate("MainWindow", "Read from file"))
        self.label_8.setText(_translate("MainWindow", "λ"))
        self.label_12.setToolTip(_translate("MainWindow", "Sample angle read from file"))
        self.label_12.setText(_translate("MainWindow", "SANGLE"))
        self.datasetSangle.setToolTip(_translate("MainWindow", "Sample angle read from file"))
        self.label_13.setToolTip(_translate("MainWindow", "Sample angle calculated from 2Θ and X-center position"))
        self.label_13.setText(_translate("MainWindow", "SANGLE-calc"))
        self.datasetAi.setToolTip(_translate("MainWindow", "Sample angle calculated from 2Θ and X-center position"))
        self.datasetLambda.setToolTip(_translate("MainWindow", "Read from file"))
        self.label_9.setToolTip(_translate("MainWindow", "Read from file"))
        self.label_9.setText(_translate("MainWindow", "Proton Charge"))
        self.datasetPCharge.setToolTip(_translate("MainWindow", "Read from file"))
        self.label_10.setToolTip(_translate("MainWindow", "Read from file"))
        self.label_10.setText(_translate("MainWindow", "Total Counts"))
        self.datasetTotCounts.setToolTip(_translate("MainWindow", "Read from file"))
        self.label_6.setText(_translate("MainWindow", "Counting Time"))
        self.label_37.setText(_translate("MainWindow", "Count Rate"))
        self.datasetROI.setToolTip(_translate("MainWindow", "Counts in the window selected for X and Y"))
        self.counts_roi_label.setToolTip(_translate("MainWindow", "Counts in the window selected for X and Y"))
        self.counts_roi_label.setText(_translate("MainWindow", "Counts ROI"))
        self.label_19.setText(_translate("MainWindow", "Matched direct beam:"))
        self.matched_direct_beam_label.setText(_translate("MainWindow", "None"))
        self.is_direct_beam_label.setToolTip(_translate("MainWindow", "Direct beam indicator to let you know whether the application thinks this might be a direct beam."))
        self.is_direct_beam_label.setStatusTip(_translate("MainWindow", "Direct beam indicator to let you know whether the application thinks this might be a direct beam."))
        self.direct_beam_runs_label.setToolTip(_translate("MainWindow", "A list of files selected fro normalization"))
        self.direct_beam_runs_label.setText(_translate("MainWindow", "Direct beam runs:"))
        self.normalization_list_label.setToolTip(_translate("MainWindow", "A list of files selected fro normalization"))
        self.normalization_list_label.setText(_translate("MainWindow", "None"))
        self.label_18.setText(_translate("MainWindow", "Cross sections:   "))
        self.selectedChannel0.setText(_translate("MainWindow", "++"))
        self.selectedChannel5.setText(_translate("MainWindow", "--"))
        self.selectedChannel7.setText(_translate("MainWindow", "-+"))
        self.selectedChannel1.setText(_translate("MainWindow", "--"))
        self.selectedChannel4.setText(_translate("MainWindow", "++"))
        self.selectedChannel2.setText(_translate("MainWindow", "+-"))
        self.selectedChannel3.setText(_translate("MainWindow", "-+"))
        self.selectedChannel6.setText(_translate("MainWindow", "+-"))
        self.selectedChannel8.setText(_translate("MainWindow", "++"))
        self.selectedChannel9.setText(_translate("MainWindow", "--"))
        self.selectedChannel10.setText(_translate("MainWindow", "+-"))
        self.selectedChannel11.setText(_translate("MainWindow", "-+"))
        item = self.reductionTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Run No."))
        item.setToolTip(_translate("MainWindow", "File Number"))
        item = self.reductionTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "I0"))
        item.setToolTip(_translate("MainWindow", "Scaling Factor"))
        item = self.reductionTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "NL"))
        item.setToolTip(_translate("MainWindow", "Points cut from low Q side"))
        item = self.reductionTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "NR"))
        item.setToolTip(_translate("MainWindow", "Points cut from high Q side"))
        item = self.reductionTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "x0"))
        item.setToolTip(_translate("MainWindow", "Center X-Pixel of Window for Reflectivity"))
        item = self.reductionTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "xw"))
        item.setToolTip(_translate("MainWindow", "Width in X-Pixels of Window for Reflectivity"))
        item = self.reductionTable.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "y0"))
        item.setToolTip(_translate("MainWindow", "Center Y-Pixel of Window for Reflectivity"))
        item = self.reductionTable.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "yw"))
        item.setToolTip(_translate("MainWindow", "Width in Y-Pixels of Window for Reflectivity"))
        item = self.reductionTable.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "bg0"))
        item.setToolTip(_translate("MainWindow", "Background Region Center"))
        item = self.reductionTable.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "bgw"))
        item.setToolTip(_translate("MainWindow", "Background Region Width"))
        item = self.reductionTable.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "DPix"))
        item.setToolTip(_translate("MainWindow", "DirectPixel"))
        item = self.reductionTable.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "Theta"))
        item.setToolTip(_translate("MainWindow", "Scattering angle (degrees)"))
        item = self.reductionTable.horizontalHeaderItem(12)
        item.setText(_translate("MainWindow", "Dir. Run"))
        item.setToolTip(_translate("MainWindow", "The normalization file used for this dataset"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Data"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "A list of datasets that will be used for reduction"))
        item = self.normalizeTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Run No."))
        item.setToolTip(_translate("MainWindow", "Dataset number"))
        item = self.normalizeTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "x0"))
        item.setToolTip(_translate("MainWindow", "X-Center of extraction window"))
        item = self.normalizeTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "xw"))
        item.setToolTip(_translate("MainWindow", "X-Width of extraction window"))
        item = self.normalizeTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "y0"))
        item.setToolTip(_translate("MainWindow", "Y-Center of extraction window"))
        item = self.normalizeTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "yw"))
        item.setToolTip(_translate("MainWindow", "Y-Width of extraction window"))
        item = self.normalizeTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "bg0"))
        item.setToolTip(_translate("MainWindow", "Background X-Center"))
        item = self.normalizeTable.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "bgw"))
        item.setToolTip(_translate("MainWindow", "Background X-width"))
        item = self.normalizeTable.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "λ"))
        item.setToolTip(_translate("MainWindow", "Central Wavelength"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Direct Beam"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "A list of datasets available for wavelength normalization"))
        self.reduceButton.setText(_translate("MainWindow", "Reduce..."))
        self.plotTab.setTabText(self.plotTab.indexOf(self.Overview_Tab), _translate("MainWindow", "Overview"))
        self.plotTab.setTabToolTip(self.plotTab.indexOf(self.Overview_Tab), _translate("MainWindow", "Show the active dataset and information about the datasets selected for normalization and reduction"))
        self.plotTab.setTabText(self.plotTab.indexOf(self.XY_Tab), _translate("MainWindow", "X-Y"))
        self.plotTab.setTabToolTip(self.plotTab.indexOf(self.XY_Tab), _translate("MainWindow", "X-Y intensity maps for all channels in this file"))
        self.plotTab.setTabText(self.plotTab.indexOf(self.XTof_Tab), _translate("MainWindow", "X-ToF"))
        self.plotTab.setTabToolTip(self.plotTab.indexOf(self.XTof_Tab), _translate("MainWindow", "X-ToF intensity maps for all channels in this file"))
        self.label_14.setText(_translate("MainWindow", "Intensity range: "))
        self.label_21.setText(_translate("MainWindow", "I_min 10^"))
        self.label_22.setText(_translate("MainWindow", "I_max 10^"))
        self.apply_offspec_crop_button.setToolTip(_translate("MainWindow", "Use zooming region from the first cross-section and apply to all other plots."))
        self.apply_offspec_crop_button.setText(_translate("MainWindow", "Apply cropping to all"))
        self.refresh_offspec_button.setToolTip(_translate("MainWindow", "Recalculate the offspecular data"))
        self.refresh_offspec_button.setStatusTip(_translate("MainWindow", "Recalculate the offspecular data"))
        self.refresh_offspec_button.setText(_translate("MainWindow", "Refresh"))
        self.kizmkfzVSqz.setText(_translate("MainWindow", "(ki_z-kf_z) vs Qz"))
        self.qxVSqz.setText(_translate("MainWindow", "Qx vs Qz"))
        self.kizVSkfz.setText(_translate("MainWindow", "ki_z vs kf_z"))
        self.groupBox.setTitle(_translate("MainWindow", "Output options"))
        self.offspec_smooth_checkbox.setToolTip(_translate("MainWindow", "Check box to apply smoothing algorithm to the intensity"))
        self.offspec_smooth_checkbox.setText(_translate("MainWindow", "Intensity smoothing"))
        self.label_36.setText(_translate("MainWindow", "X-axis:"))
        self.offspec_x_min_spinbox.setToolTip(_translate("MainWindow", "Minimum X-value of the rebinned output data"))
        self.offspec_x_min_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.label_41.setText(_translate("MainWindow", "to"))
        self.offspec_x_max_spinbox.setToolTip(_translate("MainWindow", "Maximum X-value of the rebinned output data"))
        self.offspec_x_max_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.label_42.setText(_translate("MainWindow", "Y-axis:"))
        self.offspec_y_min_spinbox.setToolTip(_translate("MainWindow", "Minimum Y-value of the rebinned output data"))
        self.offspec_y_min_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.label_43.setText(_translate("MainWindow", "to"))
        self.offspec_y_max_spinbox.setToolTip(_translate("MainWindow", "Maximum Y-value of the rebinned output data"))
        self.offspec_y_max_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.offspec_rebin_x_bins_label.setText(_translate("MainWindow", "Bins in X"))
        self.offspec_rebin_x_bins_spinbox.setToolTip(_translate("MainWindow", "Enter the number of bins in X"))
        self.offspec_rebin_y_bins_label.setText(_translate("MainWindow", "Bins in Y"))
        self.offspec_rebin_y_bins_spinbox.setToolTip(_translate("MainWindow", "Enter the number of bins in Y"))
        self.offspec_slice_checkbox.setToolTip(_translate("MainWindow", "Check to extract slices at the specified Y-values (Qz or kf_z)"))
        self.offspec_slice_checkbox.setText(_translate("MainWindow", "Extract Qz slices"))
        self.label_24.setText(_translate("MainWindow", "Slice Qz range:"))
        self.slice_qz_min_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.label_40.setText(_translate("MainWindow", "to"))
        self.slice_qz_max_spinbox.setSuffix(_translate("MainWindow", " 1/A"))
        self.offspec_err_weight_checkbox.setToolTip(_translate("MainWindow", "Check to use an error weighted average when binning the data, otherwise a simple average will be used"))
        self.offspec_err_weight_checkbox.setText(_translate("MainWindow", "Error weighting"))
        self.label_23.setText(_translate("MainWindow", "Qz bin width:"))
        self.plotTab.setTabText(self.plotTab.indexOf(self.OffSpec_Tab), _translate("MainWindow", "Off-Specular"))
        self.plotTab.setTabToolTip(self.plotTab.indexOf(self.OffSpec_Tab), _translate("MainWindow", "Off-Specular scattering intensity preview for all files in the reduction list"))
        self.label_47.setText(_translate("MainWindow", "Wavelength range:"))
        self.gisans_wl_min_spinbox.setSuffix(_translate("MainWindow", " A"))
        self.label_48.setText(_translate("MainWindow", "to"))
        self.gisans_wl_max_spinbox.setSuffix(_translate("MainWindow", " A"))
        self.label_49.setText(_translate("MainWindow", "Number of wavelength bands:"))
        self.label_51.setText(_translate("MainWindow", "Bins in Qz/p_f:"))
        self.label_52.setText(_translate("MainWindow", "Bins in Qy:"))
        self.label_50.setText(_translate("MainWindow", "Bin in"))
        self.gisans_qz_radio.setText(_translate("MainWindow", "Qz"))
        self.gisans_pf_radio.setText(_translate("MainWindow", "p_f"))
        self.label_46.setText(_translate("MainWindow", "Intensity range:"))
        self.label_16.setText(_translate("MainWindow", "Imin 10^"))
        self.label_32.setText(_translate("MainWindow", "Imax 10^"))
        self.plotTab.setTabText(self.plotTab.indexOf(self.gisansTab), _translate("MainWindow", "GISANS"))
        self.daslogBox.setTitle(_translate("MainWindow", "Recorded values for all Motors/Devices:"))
        self.daslogTableBox.setSortingEnabled(True)
        item = self.daslogTableBox.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.daslogTableBox.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Value"))
        item = self.daslogTableBox.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Unit"))
        self.plotTab.setTabText(self.plotTab.indexOf(self.daslogTab), _translate("MainWindow", "DAS Logs"))
        self.plotTab.setTabToolTip(self.plotTab.indexOf(self.daslogTab), _translate("MainWindow", "Motor and parameter log read from the file"))
        self.plotTab.setTabText(self.plotTab.indexOf(self.compareTab), _translate("MainWindow", "Compare"))
        self.label_35.setText(_translate("MainWindow", "X-Projection"))
        self.label_34.setText(_translate("MainWindow", "Y-Projection"))
        self.label_33.setText(_translate("MainWindow", "Reflectivity"))
        self.menuReduction.setTitle(_translate("MainWindow", "Reduction"))
        self.menuAutomatics.setTitle(_translate("MainWindow", "Tools"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.mainToolbar.setWindowTitle(_translate("MainWindow", "Main Toolbar"))
        self.actionOpen.setText(_translate("MainWindow", "Open..."))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open a data file"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionNorm.setText(_translate("MainWindow", "Set as normalization"))
        self.actionNorm.setToolTip(_translate("MainWindow", "Take current data set as direct beam for wavelength normalization"))
        self.actionNorm.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionAddPlot.setText(_translate("MainWindow", "Add to reduction list"))
        self.actionAddPlot.setToolTip(_translate("MainWindow", "Add the current data set to the reduction list (Ctrl+Q)"))
        self.actionAddPlot.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionClear.setText(_translate("MainWindow", "Clear reduction list"))
        self.actionClear.setToolTip(_translate("MainWindow", "Remove all data sets from the reduction list"))
        self.actionClear.setShortcut(_translate("MainWindow", "Ctrl+Shift+Q"))
        self.actionAdjust_Dirct_Beam.setText(_translate("MainWindow", "Adjust Dirct Beam"))
        self.actionAdjust_Dirct_Beam.setToolTip(_translate("MainWindow", "Use active dataset to set overwrite parameters for direct pixel and Dangle0"))
        self.actionNormalizeScaling.setText(_translate("MainWindow", "Set Scaling"))
        self.actionNormalizeScaling.setToolTip(_translate("MainWindow", "Scale total reflection to 1/fit overlap to previous run (Ctrl+S)"))
        self.actionNormalizeScaling.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionRemove.setText(_translate("MainWindow", "Remove from reduction list"))
        self.actionRemove.setToolTip(_translate("MainWindow", "Remove selected data set from the reduction list"))
        self.actionReduce.setText(_translate("MainWindow", "Reduce..."))
        self.actionReduce.setToolTip(_translate("MainWindow", "Reduce the data in the reduction table and save the output"))
        self.actionReduce.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionAutoYLimits.setText(_translate("MainWindow", "Automatic Y Limits"))
        self.actionAutoYLimits.setToolTip(_translate("MainWindow", "Try to find the Y region of the beam automatically"))
        self.actionAutomaticXPeak.setText(_translate("MainWindow", "Automatic Peak Finder"))
        self.actionAutomaticXPeak.setToolTip(_translate("MainWindow", "Find the reflected peak automatically when loading a new file"))
        self.actionClear_Overwrite.setText(_translate("MainWindow", "Clear Overwrite"))
        self.actionLoad_Extraction.setText(_translate("MainWindow", "Open Reduced File..."))
        self.actionLoad_Extraction.setToolTip(_translate("MainWindow", "Open a reduced file"))
        self.actionLoad_Extraction.setShortcut(_translate("MainWindow", "Ctrl+Alt+O"))
        self.actionClear_Normalizations.setText(_translate("MainWindow", "Clear normalization list"))
        self.actionClear_Normalizations.setToolTip(_translate("MainWindow", "Remove all data sets from the direct beam list"))
        self.actionClear_Normalizations.setShortcut(_translate("MainWindow", "Ctrl+Shift+W"))
        self.actionOpen_Compare_Window.setText(_translate("MainWindow", "Open Compare Window..."))
        self.actionAdvanced_Background.setText(_translate("MainWindow", "Advanced Background..."))
        self.actionAdvanced_Background.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionOpen_Sum.setText(_translate("MainWindow", "Open Sum..."))
        self.actionOpen_Sum.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionCut_Points.setText(_translate("MainWindow", "Cut Points (L/R)"))
        self.actionCut_Points.setToolTip(_translate("MainWindow", "Change the left and right cutoff (Cut Pts) values for the active file from the normalization intensity (Ctrl+Shift+C)"))
        self.actionCut_Points.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.actionAuto_Reflectivity.setText(_translate("MainWindow", "Auto Reflectivity"))
        self.actionAuto_Reflectivity.setToolTip(_translate("MainWindow", "Start with active dataset as total reflectivity region and continue adding datasets until the incident angle gets lower than for the last data set"))
        self.actionAuto_Reflectivity.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.actionStrip_Overlap.setText(_translate("MainWindow", "Strip Overlap"))
        self.actionStrip_Overlap.setToolTip(_translate("MainWindow", "Strip points from datasets that overlap with the subsequent dataset in the reflectivity"))
        self.actionStrip_Overlap.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionPolarization.setText(_translate("MainWindow", "Polarization..."))
        self.actionRaw_Data_Comparison.setText(_translate("MainWindow", "Raw Data Comparison..."))
        self.actionIPython_Console.setText(_translate("MainWindow", "IPython Console"))
        self.actionIPython_Console.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionQuick_Reduce.setText(_translate("MainWindow", "Quick-Reduce"))
        self.actionQuick_Reduce.setToolTip(_translate("MainWindow", "Reduce list using options from last export"))
        self.actionQuick_Reduce.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionBrowse_NXS_File.setText(_translate("MainWindow", "Browse NXS File..."))
        self.actionBrowse_NXS_File.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionFilter_Points.setText(_translate("MainWindow", "Filter Points..."))
        self.actionFilter_Points.setToolTip(_translate("MainWindow", "Remove points from already exported reflectivity datasets"))
        self.actionOpen_Reduction_Preview.setText(_translate("MainWindow", "Open Reduction Preview..."))
        self.actionAutoNorm.setText(_translate("MainWindow", "Auto select normalization"))
        self.actionAutoNorm.setToolTip(_translate("MainWindow", "Automatically select normalization file with closest slit sizes"))
        self.actionSearch_Database.setText(_translate("MainWindow", "Search Database..."))
        self.actionExport_Raw_Data.setText(_translate("MainWindow", "Export Raw Data..."))
        self.actionExport_Raw_Data.setToolTip(_translate("MainWindow", "Save the raw, unnormalized intensity data of the current dataset."))
        self.action_use_common_ranges.setText(_translate("MainWindow", "Use common ranges"))
        self.action_use_common_ranges.setToolTip(_translate("MainWindow", "Apply identical ranges to all cross-sections"))
        self.action_use_common_ranges.setStatusTip(_translate("MainWindow", "Apply identical ranges to all cross-sections"))
        self.actionRemove_Normalization.setText(_translate("MainWindow", "Remove from normalizations"))
        self.actionRemove_Normalization.setIconText(_translate("MainWindow", "Remove from normalizations"))
        self.actionRemove_Normalization.setToolTip(_translate("MainWindow", "Remove the selected data set from normalization list"))
        self.actionResult_Viewer.setText(_translate("MainWindow", "Result Viewer"))
        self.actionOpenSum.setText(_translate("MainWindow", "Open Sum"))
        self.actionOpenSum.setToolTip(_translate("MainWindow", "Open and merge multiple runs"))
from .compare_plots import CompareWidget
from .mplwidget import MPLWidget
import icons_rc
